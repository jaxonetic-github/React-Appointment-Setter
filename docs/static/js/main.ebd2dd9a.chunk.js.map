{"version":3,"sources":["constants.js","redux/reducers/appReducer.js","navigation/ApplicationBar.js","navigation/Footer.js","home/MainComponent.js","home/AdminMenu.js","home/InfoCards.js","home/ContactCard.js","home/GeneralInfo.js","checkout/Reservations.js","checkout/ItineraryFragment.js","checkout/AgreementForm.js","checkout/squarePayComponent.js","checkout/Review.js","checkout/Checkout.js","Profile.js","signinup/Signin.js","signinup/Signup.js","App.js","reportWebVitals.js","redux/sagas.js","index.js","RealmDAO.js"],"names":["isAdminSelector","state","app","currentUser","customData","email","INITIAL_STATE","auth","loginState","isLoggedIn","isLoggingIn","backEnd","reservations","userid","pickUpDate","pickUpTime","dropOffLocation","pickupLocation","firstName","lastName","createdDated","phone","profile","siteData","error","EmailAriaLabel","PhoneAriaLabel","FirstNameAriaLabel","LastNameAriaLabel","PickUpDateAriaLabel","PickUpLocationAriaLabel","DropOffDateAriaLabel","DropOffLocationAriaLabel","PasswordAriaLabel","FEE_FORMULA","name","desc","price","handleAuthenticationError","err","returnMsg","parseAuthenticationError","status","message","errorType","console","log","parts","split","reason","length","trimStart","reasonRegex","match","groups","fetchSiteData","createAction","fetchSiteDataError","fetchSiteDataSuccess","loadBackEnd","loadProfile","loadUser","bubbleError","loginError","loginAnonymously","login","loginSucceeded","logout","register","registerSuccess","fetchReservations","fetchReservationsSuccess","fetchReservationsError","insertReservation","insertReservationSuccess","refreshCustomData","refreshCustomDataSuccess","creditPaymentSuccess","creditPaymenError","appReducer","createReducer","builder","addCase","action","trace","type","user","payload","customProfileData","authState","push","addDefaultCase","selectAuthedUserDataState","ApplicationBar","dispatch","useDispatch","navigate","useNavigate","authedUserSelector","useSelector","hasProfileSelector","React","useState","anchorEl","setAnchorEl","handleClose","useEffect","Box","sx","flexGrow","AppBar","position","bgcolor","Toolbar","Grid","container","spacing","item","xs","IconButton","size","edge","mr","color","onClick","event","currentTarget","align","Typography","component","variant","gutterBottom","fontFamily","fontWeight","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Copyright","props","Link","href","Date","getFullYear","footers","title","description","Footer","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","Container","maxWidth","borderTop","theme","palette","divider","mt","py","justifyContent","map","footer","sm","MainComponent","className","src","alt","AdminDrawerMenu","toggleDrawer","handleSave","drawerState","editable","setEditMode","edit","Fragment","top","Drawer","anchor","p","border","width","Switch","checked","onChange","target","inputProps","Button","editHomeData","window","location","reload","selectCardsData","cardData","InfoCards","getCardData","displayData","setDisplayData","setDrawerState","a","pageData","key","marginTop","alignItems","tier","index","md","Card","imageURL","CardHeader","subheader","titleTypographyProps","subheaderTypographyProps","backgroundColor","mode","grey","CardContent","line","descriptionIndex","Input","label","onBlur","clone","JSON","parse","stringify","value","focus","defaultValue","fullWidth","selectContactData","contactData","ContactCard","componentData","selectSiteData","GeneralInfo","getSiteData","getIsAdmin","setEditableMode","setTitle","reservationButton","setReservationButton","subtitle","setSubTitle","paragraphs","paragraph1","setParagraph1","paragraph2","setParagraph2","disableGutters","pt","pb","placeholder","Reservations","getReservations","loginSuccessful","Object","keys","contained","Table","TableHead","TableRow","TableCell","TableBody","reservation","createdDate","toString","Divider","toLocaleString","dropOffDate","ItineraryFragment","isPasswdNeeded","TextField","InputLabelProps","shrink","required","autoComplete","PaymentForm","TextareaAutosize","minRows","style","FormControlLabel","control","Checkbox","SquarePaymentForm","handleSuccess","applicationId","process","cardTokenizeResponseReceived","token","buyer","createVerificationDetails","amount","billingContact","addressLines","familyName","givenName","countryCode","city","currencyCode","intent","locationId","ReviewFragment","List","disablePadding","product","ListItem","px","ListItemText","primary","secondary","pickupDate","steps","createTheme","Checkout","setFirstName","setLastName","setEmail","password","setPassword","setError","setPhone","activeStep","setActiveStep","setPickUpDate","setDropoffDate","setDropoffLocation","setPickupLocation","agreementSignature","setAgreementSignature","agreementChecked","setAgreementChecked","paymentSucceeded","setPaymentSucceeded","handleNext","canContinue","ThemeProvider","mb","Paper","my","Stepper","Step","StepLabel","step","tmpRes","Review","successEvent","errors","Error","getStepContent","display","ml","disabled","currentStep","validated","phoneValidated","validator","isMobilePhone","emailValidated","isEmail","pickupLocationValidated","isEmpty","dropOffLocationValidated","firstNameValidated","lastNameValidated","itineraryValidated","Profile","handleSubmit","preventDefault","data","FormData","firstname","get","lastname","flexDirection","Avatar","m","noValidate","onSubmit","SignIn","stateError","setErrorMsg","credentials","autoFocus","SignUp","submissionInfo","App","exact","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","registerSaga","signOutSaga","getReservationsSaga","insertReservationSaga","loginAnonymouslySaga","loginSaga","customDataRefreshSaga","fetchSiteDataSaga","mySaga","select","call","registerWithEmail","put","logOut","reservationsResult","insertReservations","loginResult","site","screen","reloadCustomData","takeLatest","takeEvery","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","logger","run","demoAppId","logIn","Realm","anonymous","emailPassword","msg","registerData","emailPasswordAuth","registerUser","functions","AddUserData","success","getProfile","prof","GetUserData","GetSiteData","newPageData","obj","EditHomeData","editResults","setSiteData","resetResults","newdata","newReservation","dateAdded","InsertReservation","result","init","emailTemplate","to_name","from_name","emailjs","send","emailResult","FindReservation","res","this","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebd2dd9a.chunk.js","sourcesContent":["/** module constants */\n\n/** isAdmin state selector */\nexport  const isAdminSelector = state => (state?.app?.currentUser?.customData?.email==='kurawan@yahoo.com') \n\nexport const RESERVATION = {\n  userid:\"6182198ee43796e8d32aff28\",\n  pickUpDate:\"12:12:10\",\n  pickUpTime:\"02:03:04\",\n  dropOffLocation:\"dropoffdestinationf\",\n  pickupLocation:\"pickupdestinationf\",\n  firstName:\"A\",\n  lastName:\"Z\",\n  email:\"az@email\",\n  createdDated:'2011:11:12',\n  phone:\"555-555-5555\"};\n\n\n/** \n *   @description Initial Reducer State @constant\n *   @type {string}\n *   @default\n */\nexport const INITIAL_STATE={\n  auth:{loginState :{isLoggedIn:false, isLoggingIn:false},\n            backEnd:{}\n       },\n       app:{},\n  reservations:[RESERVATION],\n  profile:{ firstName:\"A\", lastName:\"Z\",  email:\"az@email\"},\n  siteData:{},\n  error:''\n};\n\n\n/******************    ARIA Labels   *************/\nexport const EmailAriaLabel = { 'aria-label': 'EmailAddress' };\nexport const PhoneAriaLabel = { 'aria-label': 'Phone' };\nexport const ErrorAriaLabel = { 'aria-label': 'Error' };\nexport const submitAriaLabel = { 'aria-label': 'Submit' };\nexport const FirstNameAriaLabel = { 'aria-label': 'FirstName' };\nexport const LastNameAriaLabel = { 'aria-label': 'LastName' };\nexport const PickUpDateAriaLabel = { 'aria-label': 'PickUpDate' };\nexport const PickUpLocationAriaLabel = { 'aria-label': 'PickupLocation' };\nexport const DropOffDateAriaLabel = { 'aria-label': 'DropOFfDate' };\nexport const DropOffLocationAriaLabel = { 'aria-label': 'DropOffLocation' };\nexport const PasswordAriaLabel = { 'aria-label': 'Password' };\n \n\n/******* HOME PAGE user modifiable text **********/\n\nconst title = 'Service';\nconst subtitle = 'Entertainment and Pleasure';\nconst reservationButton = 'Make A Reservation';\nconst paragraph0Text = '8ANGELS is uniquely prepared to meet your private transportation needs. Our  program serves  a range of industries and occasions, including Concert/tours, sporting events, business venues, wedding events and more. You can depend on an affordable spacious vehicle. We\\'ve got you covered! ';\nconst paragraph1Text = 'This Vehicle is exclusively for transportation to and from hotels and events.  It is also a perfect choice to transport groomsmen and bridesmaids during wedding preparations'\nexport const HOME_PAGE_DEFAULT = {title, subtitle, reservationButton,paragraphs: [paragraph0Text, paragraph1Text]};\n\nexport const CONTACTINFO =  {\n    title: 'More Info',\n\n    price: '15',\n    description: [\n      'Driver:            Mr Awan Kur',\n      'Phone :           480-809-7897',\n      'Email :      kurawan@yahoo.com',\n      'Or click below  to get started',     ],\n      imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/c46c8c01d73d95464eb3931cb4f93fc1c5c2e6bd/public/driver1.jpeg',\n    buttonText: 'Get started',\n    buttonVariant: 'contained',\n  };\n\nexport const TIERS = [\n  {\n    title: 'Features',\n    price: 'For your Comfort and Protection',\n    description: [\n      'Seats upto 8 Passengers',\n      'No smoking or Pets',\n      'camera in vehicle',\n      'hand sanitizers and wipes',\n    ],\n     imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/3f90afcd4efbb7e8a62559deaf8162e7bcdba2b8/public/banner_inside_carview.jpeg',\n  },\n \n  {\n    title: 'Arrive in styles',\n    price: '30',\n    description: [\n      'Weddings',\n      'Airport Escorts',\n      'Business Conventions',\n      'Concentions',\n    ],\n      imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/3f90afcd4efbb7e8a62559deaf8162e7bcdba2b8/public/sideview_closeddoors.jpeg',\n\n  },\n]\n\n\n/*********************  fee structue used by Review screen to display to user  ******/\nexport const FEE_FORMULA = [\n  {\n    name: 'Reservation Fee',\n    desc: 'Due by Pickup : Flat fee',\n    price: '$150.00',\n  },\n  {\n    name: 'Hourly adjustments',\n    desc: 'ex. $20 hour after 3 hours',\n    price: '$3.45',\n  },\n  {\n    name: 'Mileage adjustments',\n    desc: 'ex. $3/mi after 150 miles',\n    price: '$3.00/mi',\n  },\n  {\n    name: 'Security Deposit',\n    desc: '',\n    price: '$100.00',\n  },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\n\n/************************** DB **************************/\n\n/***************Authentication Specific *******************/\nexport function handleAuthenticationError(err) {\n  let returnMsg=null;\n  const { status, message } = parseAuthenticationError(err);\n  const errorType = message || status;\n  console.log(err,'   ===',message,'---', status);\n  switch (errorType) {\n    case \"invalid username\":\n       returnMsg = \"Invalid email address.\" ;\n      break;\n    case \"invalid username/password\":\n    case \"invalid password\":\n    case \"401\":\n\n      returnMsg =  \"Incorrect password.\";\n      break;\n    case \"name already in use\":\n    case \"409\":\n//      setError((err) => ({ ...err, errorMsg: \"Email is already registered.\" }));\n      returnMsg = \"Email is already registered.\" ;\n      break;\n    case \"password must be between 6 and 128 characters\":\n    case \"400\":\n     // setError((err) => ({...err,  errorMsg: \"Password must be between 6 and 128 characters.\"  }));\n      returnMsg = \"Password must be between 6 and 128 characters.\";\n      break;\n    default:\n      break;\n  }\n  return returnMsg ;\n}\n\nexport function parseAuthenticationError(err) {\n  const parts = err.message.split(\":\");\n  const reason = parts[parts.length - 1].trimStart();\n  if (!reason) return { status: \"\", message: \"\" };\n  const reasonRegex = /(?<message>.+)\\s\\(status (?<status>[0-9][0-9][0-9])/;\n  const match = reason.match(reasonRegex);\n  const { status, message } = match?.groups ?? {};\n  return { status, message };\n}","\n/** @module reducer \n * \n * @desccription Uses reduxjs/tookit for Redux reducer and action creation \n */\n\nimport { createAction, createReducer } from '@reduxjs/toolkit'\nimport {INITIAL_STATE } from '../../constants.js';\nexport const FETCH_SITEDATA ='FETCH_SITEDATA';\nexport const FETCH_SITEDATA_SUCCESS ='FETCH_SITEDATA_SUCCESS';\nexport const FETCH_SITEDATA_ERROR ='FETCH_SITEDATA_FAILED';\nexport const FETCH_RESERVATION ='FETCH_RESERVATIONS';\nexport const FETCH_RESERVATION_SUCCESS ='FETCH_RESERVATION_SUCCESS';\nexport const FETCH_RESERVATION_ERROR ='FETCH_RESERVATION_FAILED';\nexport const RESERVATION_INSERT_ERROR ='RESERVATION_INSERT_FAILED';\nexport const RESERVATION_INSERT_SUCCESS ='RESERVATION_INSERT_SUCCESS';\nexport const RESERVATION_INSERT ='RESERVATION_INSERT_REQUESTED';\nexport const LOGIN_SUCCEEDED ='LOGIN_SUCCEEDED';\nexport const LOGIN_ERROR ='LOGIN_FAILED';\nexport const LOGIN ='LOGIN';\nexport const LOGOUT ='LOGOUT';\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS';\nexport const REGISTER_ERROR ='REGISTER_FAILED';\nexport const REGISTER ='REGISTER_REQUESTED';\nexport const USERDATA_FETCH ='USERDATA_FETCH';\nexport const USERDATA_FETCH_SUCCESS ='USERDATA_FETCH_SUCCESS';\nexport const USERDATA_FETCH_ERROR ='USERDATA_FETCH_ERROR';\nexport const FETCH_BACKEND ='LOAD_BACKEND';\nexport const FETCH_BACKEND_SUCCESS ='LOAD_BACKEND_SUCCESS';\nexport const FETCH_BACKEND_ERROR ='LOAD_BACKEND_ERROR';\nexport const BUBBLE_ERROR ='BUBBLEERROR';\nexport const LOAD_USER='LOAD/USER';\nexport const LOAD_PROFILE = \"LOAD_PROFILE\";\n\nexport const CREDIT_PAYMENT_SUCCESS = 'CREDIT_PAYMENT_SUCCESS';\nexport const CREDIT_PAYMENT_ERROR = 'CREDIT_PAYMENT_ERROR';\nexport const LOGIN_ANONYMOUSLY = 'LOGIN_ANONYMOUSLY';\n\n\n\n\nexport const fetchSiteData = createAction(FETCH_SITEDATA);\nexport const fetchSiteDataError = createAction(FETCH_SITEDATA_ERROR);\nexport const fetchSiteDataSuccess = createAction(FETCH_SITEDATA_SUCCESS);\nexport const loadBackEnd = createAction(FETCH_BACKEND);\nexport const loadProfile = createAction(LOAD_PROFILE);\nexport const loadUser = createAction(LOAD_USER);\nexport const loadBackEndError = createAction(FETCH_BACKEND_ERROR);\nexport const loadBackEndSuccess = createAction(FETCH_BACKEND_SUCCESS);\n\nexport const bubbleError = createAction(BUBBLE_ERROR);\n\nexport const loginError = createAction(LOGIN_ERROR);\nexport const loginAnonymously = createAction(LOGIN_ANONYMOUSLY);\n\n/** \n * \n *  @description loginSucceeded()   plain text Action\n\n *  @constant\n *   @type {function}\n *   @default\n * @returns {string}  the login string action\n */\nexport const login = createAction(LOGIN);\n\n/** \n * @description loginSucceeded()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const loginSucceeded = createAction(LOGIN_SUCCEEDED);\n/** \n * @description logout()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const logout = createAction(LOGOUT);\n/** \n * @description register()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const register = createAction(REGISTER)\n/** \n * @description registerSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const registerSuccess = createAction(REGISTER_SUCCESS);\n/** \n * @description registerError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const registerError = createAction(REGISTER_ERROR)\n\n/** \n * @description fetchReservations()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservations = createAction(FETCH_RESERVATION);\n/** \n * @description fetchReservationsSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservationsSuccess = createAction(FETCH_RESERVATION_SUCCESS);\n/** \n * @description fetchReservationsError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservationsError = createAction(FETCH_RESERVATION_ERROR);\n/** \n * @description insertReservation()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const insertReservation = createAction(RESERVATION_INSERT);\n/** \n * @description insertReservationSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const insertReservationSuccess = createAction(RESERVATION_INSERT_SUCCESS);\n/** \n * @description insertReservationError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const insertReservationError = createAction(RESERVATION_INSERT_ERROR);\n\n/** \n * @description refreshCustomData()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const refreshCustomData = createAction(USERDATA_FETCH);\n/** \n * @description refreshCustomDataSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const refreshCustomDataSuccess = createAction(USERDATA_FETCH_SUCCESS);\n/** \n * @description refreshCustomDataError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const refreshCustomDataError = createAction(USERDATA_FETCH_ERROR);\n/** \n * @description creditPaymentSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const creditPaymentSuccess = createAction(CREDIT_PAYMENT_SUCCESS);\n\n/** \n * @description creditPaymenError()   plain text Action\n *  @constant\n *   @type {function}\n */export const creditPaymenError = createAction(CREDIT_PAYMENT_ERROR);\n\n\n\n/**\n * @description Main/Initial App Redux Reducer\n *   @default\n\n * @returns The new state\n */\nexport const appReducer = createReducer(INITIAL_STATE, (builder) => {\n\n  builder\n  .addCase(creditPaymentSuccess, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload;\n      return state;\n    })\n    .addCase(creditPaymenError, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload;\n      return state;\n    })\n      .addCase(loadUser, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload;\n      return state;\n    })\n      .addCase(loadProfile, (state, action) => {\n      state.trace = action.type;\n      state.profile = action.payload;\n      return state;\n    })      \n    .addCase(fetchSiteData, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n        .addCase(fetchSiteDataSuccess, (state, action) => {\n      state.trace = action.type;\n      state.siteData= action.payload\n      return state;\n    })\n      .addCase(refreshCustomDataSuccess, (state, action) => {\n      state.trace = action.type;\n      state.customProfileData= action.payload\n      return state;\n    })\n    .addCase(refreshCustomData, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n    .addCase(register, (state, action) => {\n      state.trace = action.type;\n      return state;\n    }).addCase(registerSuccess, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload.user;\n      state.profile = action.payload.profile;\n      state.reservations= action.payload.reservations? action.payload.reservations:[];\n\n      return state;\n    })\n      .addCase(loadBackEnd, (state, action) => {\n      state.trace = action.type;\n      state.app= action.payload;\n      return state;\n    })\n    .addCase(loginSucceeded, (state, action) => {\n       state.trace = action.type;\n       state.authState = {status :'Logged In successfully'};\n       state.user = action.payload.user;\n       state.profile = action.payload.profile;\n       //state.reservation= action.payload.reservations;\n      state.reservations= action.payload.reservations? action.payload.reservations:[];\n\nreturn state;\n    })\n      .addCase(loginError, (state, action) => {\n       state.trace = action.type;\n       state.error = action.payload;\n      state.authState = {status :'Error while Logging In'};\n\nreturn state;\n    })\n    .addCase(login, (state, action) => { \n             state.trace = action.type;\n             state.error = '';\n     state.authState = {status :'Logging In'};\n      return state;\n    })\n    .addCase(fetchReservations, (state, action) => {\n    state.trace = action.type; \n      return state;\n    })\n    .addCase(fetchReservationsSuccess, (state, action) => {\n    state.trace = action.type; \n     state.reservations = action.payload;\n      return state;\n    })\n    .addCase(insertReservation, (state, action) => {\n    state.trace = action.type; \n      return state;\n    })\n    .addCase(insertReservationSuccess, (state, action) => {\n    state.trace = action.type; \n    console.log(state.reservations,'----',typeof state.reservations ,action.payload);\n      state.reservations= state.reservations? state.reservations.push(action.payload):[action.payload];\n      return state;\n    })\n    .addCase(logout, (state, action) => {\n      state.trace = action.type;\n      state.profile=null;\n      state.user = null;\n      state.reservations = [];\n      state.authState = null;\n      return state;\n    })\n    .addCase(bubbleError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    }).addDefaultCase((state, action) =>{\n          state.trace = action.type;\n            return state;})\n})","import React  from 'react';\nimport { useSelector,useDispatch } from 'react-redux'\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\n\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Grid from '@mui/material/Grid';\nimport Menu from '@mui/material/Menu';\nimport {logout} from '../redux/reducers/appReducer'\n\nimport { useNavigate} from \"react-router-dom\";\n//import {  isAdminSelector} from '../constants';\n\nconst selectAuthedUserDataState = state => state?.profile;\n//const selectProfile = state=>state?.profile;\n/**\n * @description Main Application Bar with menus\n */\nfunction ApplicationBar() {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authedUserSelector = useSelector(selectAuthedUserDataState);\n  const hasProfileSelector = useSelector((state)=>state?.profile?.email);\n  //const [authedUser, setAuthedUser] = useState(authedUserSelector?.email);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n     if(!hasProfileSelector) navigate(\"/\");\n  },[hasProfileSelector, navigate]);\n\n   \n  return (\n    <Box sx={{ flexGrow: 1 }}>\n \n      <AppBar position=\"fixed\"  sx={{  bgcolor: '#605757' }}>\n        <Toolbar >\n        <Grid container spacing={3}>\n  <Grid item xs={1}>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            aria-label=\"menu\"\n            sx={{ mr: 4, color:'white' }}\n            onClick={handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>       \n  </Grid>\n  <Grid item xs={10}>\n    <Box align='center'  ><Typography component=\"div\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n          sx={{fontFamily: \"cursive\",fontWeight: 650}}\n         >\n            8Angels Transportation\n          </Typography>\n          </Box>\n          \n  </Grid>\n\n</Grid>\n      { hasProfileSelector  ?   <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n          \n                <MenuItem onClick={()=>{handleClose(); navigate('profile');}}><AccountCircle />Profile</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); navigate('/reservations');}}><AssignmentIcon />Reservations</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); dispatch(logout()); navigate('/');}}>Logout</MenuItem>\n              </Menu>\n               :<Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n                  <MenuItem onClick={()=>{handleClose();  navigate('signin');}}>SignIn</MenuItem>\n               \n              </Menu>\n      }\n         {hasProfileSelector? `Hello,${authedUserSelector?.firstName}` : ''}\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\nexport default ApplicationBar;\n","import * as React from 'react';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\n//import StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\n//import { useNavigate} from \"react-router-dom\";\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n        8ANGELS AKOK TRANSPORTATION, LLC\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst footers = [\n  {\n    title: 'Company',\n    description: ['Team', 'History', 'Contact us', 'Locations'],\n  },\n  {\n    title: 'Features',\n    description: [ 'Developer stuff'],\n  },\n  {\n    title: 'Our Network',\n    description: ['Resource'],\n  },\n  {\n    title: 'Legal',\n    description: ['Privacy policy', 'Terms of use'],\n  },\n];\n\n\nexport default function Footer() {\n//  const navigate = useNavigate();\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n    \n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <Grid container spacing={4} justifyContent=\"space-evenly\">\n          {footers.map((footer) => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map((item) => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"text.secondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\n","import React from 'react';\nimport ApplicationBar from '../navigation/ApplicationBar.js'\n//import GeneralInfo from './GeneralInfo';\n//import Reservations from './checkout/Reservations';\nimport { Outlet} from 'react-router-dom';\nimport Footer from '../navigation/Footer'\n//import Agenda from '../calendars/agenda.js'\n//const banner = '../images/sideview_closeddoors.jpeg';\nconst banner = 'https://picsum.photos/id/1018/1000/600/';\n//const driverImg = 'https://application-0-iyetn.mongodbstitch.com/assets/driver1.jpeg';\n//await app.currentUser.refreshCustomData();\n\n\n/**\n *  @description The Base component for the application without Providers\n */\n function MainComponent () {\n\n  return(\n\n    <div >\n    <ApplicationBar />\n        <div id='banner' className=' box'><img src={banner}  className=\"banner-image\" alt=\"logo\" /></div>\n\n       \n    <Outlet />\n    \n    <Footer/>\n    </div>  \n  );\n}\nexport default MainComponent;\n","    import React from \"react\";\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport Drawer from '@mui/material/Drawer';\nimport Box from '@mui/material/Box';\nimport Switch from '@mui/material/Switch';\nimport Typography from '@mui/material/Typography';\n\nimport Button from '@mui/material/Button';\n\n/**\n * Admin Drawer and Menu for the Admin panel\n */\nexport default function AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit) {\n  const app  =null;\n\n  const menu = editable && (<React.Fragment key={'right'}>\n\n             <IconButton\n                  onClick={toggleDrawer}\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 ,position:'relative', top:'50px',justifyContent: 'right'}}\n          >\n            <MenuIcon />Admin\n          </IconButton>\n\n          <Drawer\n            anchor={'right'}\n            open={drawerState}\n            onClose={toggleDrawer}\n          >\n          <Box component='form' sx={{ p: 2, border: '1px dashed grey', width:200 }}>\n <p>Welcome Awan to your private Admin section</p>\n\n <Typography component=\"h5\" variant=\"h5\" align=\"left\" color=\"text.primary\" gutterBottom>Admin Options</Typography>\n<Switch\n  checked={edit}\n  onChange={(event)=>setEditMode(event.target.checked)}\n  inputProps={{ 'aria-label': 'controlled' }}\n/>\n  <label>Edit</label>\n  <Button onClick={handleSave}>Save</Button>\n  <Button onClick={()=>{app.editHomeData(null);  window.location.reload(true);  }}>Reset</Button>\n</Box>  </Drawer>\n        </React.Fragment>)\n  return menu;\n\n      }","import  React , {useState} from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\n\n\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\n\nimport AdminDrawerMenu from './AdminMenu';\nimport {  isAdminSelector} from '../constants';\n\n\nconst selectCardsData = state => state?.siteData?.cardData;\n\n/**\n * @description  InfoCards, is a an editable fragment of the  home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nfunction InfoCards(props) {\n  const navigate = useNavigate();\n  const getCardData = useSelector(selectCardsData);\n//  const isAdmin = useSelector(isAdminSelector);\n    const app = null;\nconst [displayData, setDisplayData] = useState(getCardData);\n   const [edit, setEditMode] = useState(isAdminSelector);\n  const [editable] = useState();\n const [drawerState, setDrawerState] = React.useState(false);\n\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n\n/**\n * Admin method which allows Admin to edit or save text changes\n */\n\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n      const obj = {cardData:displayData,pageData:app?.siteData?.pageData };\n      await app?.editHomeData(obj)\n\n    } catch (err) {\n     console.log('Infocards err',err);\n  }\n  window.location.reload(true);\n} \n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n      <Container sx={{marginTop:10}} maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={2} alignItems=\"flex-end\">\n          { getCardData?.map((tier, index) => (\n            <Grid item key={tier.title} xs={12} sm={12} md={6}>\n              <Card><img src={tier.imageURL}  className=\"driver1-image\" alt=\"logo\" />\n                <CardHeader\n                  title={tier.title}\n                  subheader={tier.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  action={tier.title === 'Pro' ? <StarIcon /> : null}\n                  subheaderTypographyProps={{\n                    align: 'center',\n                  }}\n                  sx={{\n                    backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                        ? theme.palette.grey[200]\n                        : theme.palette.grey[700],\n                  }}\n                />\n                <CardContent>\n                  \n                  <ul>\n                    {tier.description.map((line,descriptionIndex) => (\n                      <Typography\n                        component=\"li\"\n                       \n                        align=\"center\"\n                        key={index+descriptionIndex+line}\n                      >\n                  {line}\n                   {edit &&    <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onBlur={(event)=>{\n                    const clone = JSON.parse(JSON.stringify(displayData));\n                    clone[index].description[descriptionIndex]=event.target.value;\n                  setDisplayData(clone);\n                    event.target.focus();\n\n                }}\n                  name=\"makeReservation\"\n                  defaultValue={displayData[index].description[descriptionIndex]}\n               \n                />}\n                      </Typography>\n                    ))}\n                  </ul>\n                 {  <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{'reserve now '}<AirportShuttleIcon/></Button>}\n                </CardContent>\n        \n              </Card>\n            </Grid>\n          ))}\n        </Grid>\n      </Container>\n     \n    </React.Fragment>\n  );\n}\n\n\nexport default InfoCards;\n","import  React , {useState} from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\n\nimport AdminDrawerMenu from './AdminMenu';\n\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\n\nimport {  isAdminSelector} from '../constants';\n\nconst selectContactData = state => state?.siteData?.contactData;\n\n/**\n * @description  Display Contact Info\n */\nfunction ContactCard(props) {\n  const navigate = useNavigate();\n    const app = null;\n    const componentData = useSelector(selectContactData);\nconst [displayData, setDisplayData] = useState(componentData);\n   const [edit, setEditMode] = useState(false);\n  const [editable] = useState(isAdminSelector);\n const [drawerState, setDrawerState] = React.useState(false);\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n//console.log(app,'----',editable,\"editable\",app?.profile?.email);\n  //const displayData = props.cardData? props.cardData :app?.siteData?.cardData;\n//setDisplayData(app?.siteData?.cardData)\n //console.log(title,'  +==============++',app?.siteData?.pageData?.title);\n // });  \n\n\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n      const obj = {cardData:app?.siteData?.cardData,pageData:app?.siteData?.pageData, contactData:displayData };\n      await app?.editHomeData(obj)\n\n    } catch (err) {\n     console.log('CONTACT err',err);\n  }\n}\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n      <Container sx={{marginTop:10}} maxWidth=\"md\" component=\"main\">\n        <Grid container spacing={2} alignItems=\"flex-end\">\n        \n            <Grid item key={componentData?.title} xs={12} sm={12} md={12}>\n              <Card><img src={componentData?.imageURL}  className=\"driver1-image\" alt=\"logo\" />\n                <CardHeader\n                  title={componentData?.title+'hjbghjgj'}\n                  subheader={componentData?.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  action={componentData?.title === 'Pro' ? <StarIcon /> : null}\n                  subheaderTypographyProps={{\n                    align: 'center',\n                  }}\n                  sx={{\n                    backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                        ? theme.palette.grey[200]\n                        : theme.palette.grey[700],\n                  }}\n                />\n                <CardContent>\n                  \n                  <ul>\n                    { componentData?.description.map((line,descriptionIndex) => (\n                      <Typography\n                        component=\"li\"\n                       \n                        align=\"center\"\n                        key={descriptionIndex+line}\n                      >\n                  {line}\n                   {edit &&    <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onBlur={(event)=>{\n                    const clone = JSON.parse(JSON.stringify(displayData));\n                    clone.description[descriptionIndex]=event.target.value;\n                    console.log( event.target, 'cloning and resetting', clone);\n                  setDisplayData(clone);\n                    \n\n                }}\n                  name=\"makeReservation\"\n                  defaultValue={componentData.description[descriptionIndex]}\n               \n                />}\n                      </Typography>\n                    ))}\n                  </ul>\n                 {  <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{'reserve now '}<AirportShuttleIcon/></Button>}\n                </CardContent>\n        \n              </Card>\n            </Grid>\n          \n        </Grid>\n      </Container>\n     \n    </React.Fragment>\n  );\n}\n\n/**  @module ContactCard */\nexport default ContactCard;\n","import  React , {useState} from 'react';\n\nimport { useSelector } from 'react-redux'\n//import Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\n\n//import CardContent from '@mui/material/CardContent';\n//import CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\n//import Grid from '@mui/material/Grid';\n//import StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport AdminDrawerMenu from './AdminMenu';\nimport Input from '@mui/material/Input';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\nimport { useNavigate} from \"react-router-dom\";\nimport InfoCards from './InfoCards'\nimport ContactCard from './ContactCard'\n//import { useRealmApp } from \"../RealmApp\";\n\nimport {  isAdminSelector} from '../constants';\n\nconst selectSiteData = state => state.siteData.pageData;\n//const selectAuthedUserDataState = state => state?.app?.currentUser?.customData;\n\n/**\n * @description General Info, is the home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nfunction GeneralInfo({siteData}) {\n\nconst getSiteData = useSelector(selectSiteData)\nconst getIsAdmin = useSelector(isAdminSelector)\n  const app  = {};\n  app.siteData = getSiteData;\n  const navigate = useNavigate();\n  const [edit, setEditMode] = useState(false);\n  const [editable, setEditableMode] = useState(getIsAdmin);\n\n  //const [error, setError] = useState();\n  const [title, setTitle] = useState(app?.siteData?.pageData?.title);\n  const [reservationButton, setReservationButton] = useState(app?.siteData?.pageData?.reservationButton);\n  const [subtitle, setSubTitle] = useState(app?.siteData?.pageData?.subtitle);\n  const [paragraph1, setParagraph1] = useState(getSiteData.paragraphs[0]);\n  const [paragraph2, setParagraph2] = useState(getSiteData.paragraphs[1]);\n  const [drawerState, setDrawerState] = React.useState(false);\n //   const authedUserSelector = useSelector(selectAuthedUserDataState);\n // const [authedUser, setAuthedUser] = useState(authedUserSelector?.email!==undefined);\n\n\n   React.useEffect(() => {\n/*\n     setTitle(app?.siteData?.pageData?.title );\n    setReservationButton(app?.siteData?.pageData?.reservationButton);\n    setSubTitle(app?.siteData?.pageData?.subtitle);\n    setParagraph1(app?.siteData?.pageData?.paragraphs[0]);\n    setParagraph2(app?.siteData?.pageData?.paragraphs[1]);*/\n\n    setEditableMode(getIsAdmin);\n  },[getIsAdmin]);  \n  \n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n\n\n/**\n * Admin method which allows Admin to edit or save text changes\n */\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n       const obj = {title, subtitle, reservationButton,paragraphs: [paragraph1, paragraph2]};\n       const cardData = {pageData:obj,cardData:app?.siteData?.cardData };\n       app?.editHomeData(cardData);\n\n    } catch (err) {\n     console.log(err)\n  }\n  //window.location.reload(true);\n}\n\n\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n          {edit  ? <Box> <label>Replace title with::</label><Input   id=\"subTitle-replacement\"\n                  label=\"Replacetitle\"\n                  name=\"Replacetitle\"\n                  onChange={(event)=>{console.log(event.target.value); setTitle(event.target.value)}}\n\n                  value={title}\n                  placeholder='Enter Title text'\n                /></Box>\n         :<Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\n          {title} </Typography>}\n          {edit ? <Box> <label>Replace Subtitle With::</label><Input   id=\"subTitle-replacement\"\n                  label=\"ReplaceSubtitle\"\n                  name=\"ReplaceSubtitle\"\n                  onChange={(event)=>setSubTitle(event.target.value)}\n                  value={subtitle}\n                  placeholder='Enter Button Text'\n                /></Box>:\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\n          {subtitle}</Typography>}\n        \n        <Box>{edit && <label>Replace 1st Paragraph Text::</label>}\n        <Typography onChange={(event)=>setParagraph1(event.target.value)}  component={edit ? \"textarea\" :'div'}>{paragraph1}</Typography>\n        </Box>\n         <Box>{edit && <label>Paragraph 2 Replacement Text::</label>} <Typography onChange={(event)=>setParagraph2(event.target.value)}\n component={edit ? \"textarea\" :'div'}   >{paragraph2}</Typography>\n         </Box>\n         <Typography>  </Typography>\n          <Typography>  </Typography>\n          {edit ? <Box>\n        <label>Replace ButtonText::</label>\n         <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onChange={(event)=>setReservationButton(event.target.value)}\n                  name=\"makeReservation\"\n                  value={reservationButton}\n                  placeholder='Enter Button Text'\n                /></Box>: <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{reservationButton}<AirportShuttleIcon/></Button>}\n          \n         <Typography> </Typography>\n         <Typography> </Typography>\n          <InfoCards /> \n          <ContactCard />       \n      </Container>\n       \n    </React.Fragment>\n  );\n}\n\nexport default GeneralInfo;\n","import React, {  useState }from 'react';\nimport { useNavigate} from \"react-router-dom\";\nimport { useSelector,useDispatch } from 'react-redux'\n\nimport Container from '@mui/material/Container';\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Toolbar from '@mui/material/Toolbar';\nimport Divider from '@mui/material/Divider';\nimport {fetchReservations} from '../redux/reducers/appReducer'\n\n\n\n/**\n *  View a history of Reservations\n * Sample:\n * const reservation = {\n * userid:\"6182198ee43796e8d32aff28\",\n * pickUpDate:\"12:12:10\",\n * pickUpTime:\"02:03:04\"\n * destination:\"destinationf\"\n * firstName:\"A\",\n * lastName:\"Z\",\n * email:\"az@email\",\n * createdDated:'12:11:12',\n * phone:\"555-555-5555\"};\n *\n */\n\nfunction Reservations() {\n  const dispatch = useDispatch();\n  const getReservations = useSelector(state=>state?.reservations);\n  const [reservations] = useState(getReservations||[]);\n  const navigate = useNavigate();\n\n   const loginSuccessful = useSelector((state)=>state.profile);\n\n     React.useEffect(() => {\n      if(!loginSuccessful) navigate('/');  },[loginSuccessful, navigate]);\n\n  console.log(getReservations.reservations,'--2--', Object.keys( reservations) );\n  //const adjustDate = (someDate)=>(someDate && ((typeof someDate) === 'object' )? someDate.toDateString() : someDate);\n \n  return (\n    <React.Fragment>\n    <Container >\n   <Toolbar>\n\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n             { reservations?.length} Reservations \n          </Typography>\n          <Button contained=\"true\" color=\"success\" onClick={()=>dispatch(fetchReservations())}>Refresh</Button>\n        </Toolbar>\n   \n  \n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell aria-label='createdColumn'>Created On</TableCell>\n            <TableCell>Contact</TableCell>\n            <TableCell>PickUp & Drop Off</TableCell>\n            </TableRow>\n        </TableHead>\n        <TableBody>\n          {reservations.map((reservation, index) => \n            (<TableRow key={index}>\n              <TableCell>{reservation?.createdDate?.toString()}</TableCell>\n              <TableCell><span aria-label='wholename'>{reservation?.firstName}{' '}{reservation?.lastName}</span>\n              <Divider/><span aria-label='email'>{reservation?.email}</span><p aria-label='phone'>{reservation?.phone}</p></TableCell>\n              <TableCell><span aria-label='pickupLocation'>{reservation?.pickupLocation}</span><p >{new Date( reservation?.pickUpDate).toLocaleString()}</p><span aria-label='dropOffLocation'>{reservation?.dropOffLocation}</span><p>{new Date(reservation?.dropOffDate).toLocaleString()}</p></TableCell>\n            </TableRow>)\n          )}\n          <TableRow >\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n           <Button variant='outlined'  size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>\n        Make Another Reservation\n      </Button>\n      </Container>\n\n \n    </React.Fragment>\n  );\n}\n\nexport default Reservations;\n","import  React from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport TextField from '@mui/material/TextField';\n\nimport {EmailAriaLabel,PasswordAriaLabel, FirstNameAriaLabel, LastNameAriaLabel,\n  PickUpDateAriaLabel, PickUpLocationAriaLabel,DropOffLocationAriaLabel,DropOffDateAriaLabel }  from '../constants'\n\n/**\n *  Display itinerary specific field for user input\n */\n function ItineraryFragment(props) {\n\n  const currentUser = useSelector((state)=>state?.profile);\n\nconst isPasswdNeeded = (currentUser?.email==null);\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Pick up Date\n      </Typography>\n      <Grid container spacing={3}>\n                <Grid item xs={12} sm={6}>\n          <TextField\n            onChange = {props.onChange}\n            inputProps={PickUpDateAriaLabel}\n        name=\"pickupdate\"\n        id=\"pickupdate\"\n        label=\"Choose a pick up date\"\n       type=\"datetime-local\"\n         defaultValue=\"2021-11-21T11:30\"\n        sx={{ width: 220 }}\n        InputLabelProps={{\n          shrink: true,\n        }}/>        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n          onChange = {props.onChange}\n            required\n            inputProps={PickUpLocationAriaLabel}\n            id=\"pickup-location\"\n            name=\"pickupLocation\"\n            label=\"Pick Up Location\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6}>\n          <TextField\n          inputProps={DropOffDateAriaLabel}\n          onChange = {props.onChange}\n          name='dropoffDate'\n        id=\"dropoffdate\"\n        label=\"Choose a drop off date\"\n       type=\"datetime-local\"\n         defaultValue=\"2021-11-21T11:30\"\n        sx={{ width: 220 }}\n        InputLabelProps={{\n          shrink: true,\n        }}/>        </Grid>\n\n        <Grid item xs={12} sm={6}>\n          <TextField\n          inputProps={DropOffLocationAriaLabel}\n          onChange = {props.onChange}\n            id=\"dropoff-location\"\n            name=\"dropoffLocation\"\n            label=\"Drop off Location\"\n            fullWidth\n            variant=\"standard\"\n          />\n        </Grid>\n     <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"firstName\"\n                 placeholder='First Name'\nonChange = {props.onChange}\n                  fullWidth\n                  id=\"firstName\"\n                  inputProps={FirstNameAriaLabel}\n                  label=\"First Name\"\n                  defaultValue={currentUser?.firstName}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  inputProps={LastNameAriaLabel}\n                  placeholder='Last Name'\n                   defaultValue={currentUser?.lastName}\nonChange = {props.onChange}\n                />\n              </Grid>\n       <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"email\"\n                  onChange = {props.onChange}\n                 placeholder='email'\n                  defaultValue={currentUser?.email}\n                  inputProps={EmailAriaLabel}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                onChange = {props.onChange}\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Phone\"\n                  name=\"phone\"\n               defaultValue={currentUser?.phone}\n\n                  placeholder='Contact #'\n                />\n              </Grid>\n\n {isPasswdNeeded && <Grid item xs={12}>\n                 <Grid item xs={6} sm={6}>\n                 <TextField \n              margin=\"normal\"\n              required\n              fullWidth\n              onChange = {props.onChange}\n              name=\"password\"\n              label=\"Password\"\n              inputProps={PasswordAriaLabel}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n              </Grid>\n        </Grid>  }\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default ItineraryFragment;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\n\nconst Agreements = \"As a Business person, I take pride and dignity in my vehicles and service.  The vehicle is thoroughly cleaned inside and out because I value your image and health.\\n\\nPlease check the vehicle principle guidleins thoroughly with the agent at the lot before taking the vehicle./n/nSmoking of any kind is prohibited in the vehicle.  You will be financially responsible for any physical damage or smoking damage.  Please treat this vehicle as your own vehicle.\\n\\nPlease be aware there is a camera within this vehicle.  8 Angels monitors all their vehicles through tracking devices and cameras during the customer's reservation.  Again please follow the vehicle guidelines and enjoy your rental.\"\n\nexport default function PaymentForm(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Customer Agreements\n      </Typography>\n      <TextareaAutosize\n  aria-label=\"minimum height\"\n  minRows={3}\n  placeholder=\"Minimum 3 rows\"\n  style={{ width: 400 }}\n  value={Agreements}\n/>\n      <Grid container spacing={3}>\n              <Grid item xs={12}>\n          <FormControlLabel\n            \n            control={<Checkbox onChange={props.onChange} color=\"secondary\" name='agreementChecked' />}\n            label=\"Please check if you agree to the terms above\"\n        \n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n          name=\"agreementSignature\"\n            required\n            id=\"cardName\"\n            label=\"Enter your name if you agree\"\n            fullWidth\n            onChange={props.onChange}\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n            \n\n          />\n        </Grid>\n        \n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\nimport  {SquarePaymentsForm,  CreditCardInput} from 'react-square-web-payments-sdk';\n\n \n/**\n * import  {SquarePaymentsForm,CreditCardInput,} from 'react-square-web-payments-sdk';\n * \n * For the moment, use an npm module to handle Square Access, because of the pre-made \n * Form,Validation, Submission\n * \n */\nconst SquarePaymentForm = ({handleSuccess}) => (\n  <SquarePaymentsForm\n    /**\n     * Identifies the calling form with a verified application ID\n     * generated from the Square Application Dashboard.\n     */\n    applicationId={process.env.REACT_APP_SQUARE_APPID}\n    /**\n     * Invoked when payment form receives the result of a tokenize generation request.\n     * The result will be a valid credit card or wallet token, or an error.\n     */\n    cardTokenizeResponseReceived={(token, buyer) =>  handleSuccess(token, buyer) }\n    \n    /**\n     * This function enable the Strong Customer Authentication (SCA) flow\n     *\n     * We strongly recommend use this function to verify the buyer and\n     * reduce the chance of fraudulent transactions.\n     */\n    createVerificationDetails={() => ({\n      amount: '1.00',\n      /* collected from the buyer */\n      billingContact: {\n        addressLines: ['123 Main Street', 'Apartment 1'],\n        familyName: 'Doe',\n        givenName: 'John',\n        countryCode: 'US',\n        city: 'London',\n      },\n      currencyCode: 'USD',\n      intent: 'CHARGE',\n    })}\n    /**\n     * Identifies the location of the merchant that is taking the payment.\n     * Obtained from the Square Application Dashboard - Locations tab.\n     */\n    locationId={process.env.REACT_APP_SQUARE_LOCATIONID}\n  >\n    <CreditCardInput />\n  </SquarePaymentsForm>\n);\n\nexport default SquarePaymentForm\n","import * as React from 'react';\n\n//import { ApiError, Client, Environment,square } from 'square'\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport Divider from '@mui/material/Divider';\nimport { FEE_FORMULA } from '../constants';\nimport TextField from '@mui/material/TextField';\nimport SquarePaymentForm from './squarePayComponent.js';\n/**\n* Review component is the final stage of the Reservation process where the user can\n* view the details of the desired reservation  and finalize with payment\n*\n* @param props : \n*     props.reservation   - expects a Reservation javascript object {} used to fill component data\n*     props.handleSuccess - expects a callback upon succesful submission of credit card info \n*/\nfunction ReviewFragment(props) {\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {FEE_FORMULA.map((product) => (\n          <ListItem key={product.name} sx={{ py: 1, px: 0 }}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={10}>\n          <Typography variant=\"h6\" gutterBottom >\n            Itinerary\n          </Typography>\n          <Typography gutterBottom>{'Contact : '}{props.reservation.firstName} {props.reservation.lastName}</Typography>\n          <Typography gutterBottom>{'Pick-up : '}{props.reservation.pickupLocation}{new Date(props.reservation.pickupDate).toLocaleString()}</Typography>\n          <Typography gutterBottom>{'Drop-off : '}{props.reservation.dropOffLocation}{new Date(props.reservation.dropOffDate).toLocaleString()}</Typography>                    \n        </Grid>\n      </Grid>\n\n       <Typography variant=\"h6\" gutterBottom>\n        Secure Payment\n      </Typography>\n      <Divider />\n       <Grid item xs={12} md={6}>\n          <TextField\n            required\n            id=\"cardName\"\n            label=\"Name on card\"\n            fullWidth\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n          />\n        </Grid>\n\n   <SquarePaymentForm  handleSuccess={props.handleSuccess}/>\n    </React.Fragment>\n  );\n}\nexport default ReviewFragment;","import * as React from 'react';\nimport {  useDispatch, useSelector } from 'react-redux'\n//import { useRealmApp } from \"../RealmApp\";\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport ItineraryFragment from './ItineraryFragment';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\n\nimport AgreementForm from './AgreementForm';\nimport ReviewFragment from './Review';\nimport {useNavigate} from \"react-router-dom\";\nimport validator from 'validator';\nimport { insertReservation,creditPaymenError ,creditPaymentSuccess} from '../redux/reducers/appReducer';\n\nconst steps = ['Itinerary', 'Agreements', 'Review'];\n\n\nconst theme = createTheme();\n\n/**\n *  Module to take reservations from user. \n */\n function Checkout() {\n  const currentUser = useSelector((state)=>state?.profile);\n//  const hasProfile = useSelector((state)=>state?.profile);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [firstName, setFirstName] = React.useState(currentUser?.firstName||'');\n  const [lastName, setLastName] = React.useState(currentUser?.lastName||'');\n  const [email, setEmail] = React.useState(currentUser?.email||'');\n  const [password, setPassword] = React.useState();\n  const [error, setError] = React.useState();\n  const [phone, setPhone] = React.useState(currentUser?.phone||'');\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [pickUpDate, setPickUpDate] = React.useState(new Date());\n  const [dropOffDate, setDropoffDate] = React.useState(new Date());\n  const [dropOffLocation, setDropoffLocation] = React.useState('');\n  const [pickupLocation, setPickupLocation] = React.useState('');\n  //const [itineraryValid, setItineraryValid] = React.useState(false);\n\n  const [agreementSignature, setAgreementSignature] = React.useState('');\n  const [agreementChecked, setAgreementChecked] =React.useState(false);\n\n  const [paymentSucceeded, setPaymentSucceeded] = React.useState(false);\n\n\n   function itineraryValidated  (currentStep){\n    let validated = false;\n    if(currentStep===0){\n         const phoneValidated =validator.isMobilePhone(phone);\n         const emailValidated =  validator.isEmail(email);\n         const pickupLocationValidated =  !validator.isEmpty(pickupLocation);\n         const dropOffLocationValidated = !validator.isEmpty(dropOffLocation);\n         const firstNameValidated = !validator.isEmpty(firstName);\n         const lastNameValidated =  !validator.isEmpty(lastName);\n           validated = (phoneValidated && emailValidated && pickupLocationValidated && dropOffLocationValidated && firstNameValidated && lastNameValidated);\n          console.log(phone,email, firstNameValidated, pickupLocationValidated,dropOffLocationValidated, firstNameValidated, lastNameValidated);\n      }else\n         if(currentStep===1){\n          const agreementSignatureValidated = !validator.isEmpty(agreementSignature);\n          validated = agreementSignatureValidated && agreementChecked;\n         }\n         else \n          if(currentStep===2) {\n            //if we made it this far everything has been validated\n            validated = paymentSucceeded;\n          }\n\n      return validated;\n}\n\nfunction getStepContent(step) {\n  const tmpRes = {\n                    userid:'realmApp?.currentUser?.id',\n                   pickUpDate:pickUpDate,\n                    dropOffDate:dropOffDate,\n                   dropOffLocation:dropOffLocation,\n                   pickupLocation:pickupLocation,\n                   firstName:firstName,\n                    lastName:lastName,\n                      email:email,\n                      createdDate:new Date(),\n                      phone:phone}; \n\n  switch (step) {\n    case 0:\n      return <ItineraryFragment onChange={onChange}/>;\n    case 1:\n      return <AgreementForm onChange={onChange} />;\n    case 2:\n      return <ReviewFragment handleSuccess={(successEvent)=> \n                                        {\n                                          if(successEvent.status==='OK'){\n                                            dispatch(creditPaymentSuccess())\n                                          setPaymentSucceeded(true); \n                                        dispatch(insertReservation(tmpRes)); \n                                         setActiveStep(activeStep + 1);\n                                       }else{console.log(\"Credit Error::=>\",successEvent.errors);\n                                              dispatch(creditPaymenError('Payment Error',successEvent.toString()))}\n                                      }}\n                      reservation={tmpRes}\n            />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\n\n const onChange = (event) =>{\n    \n     \n    switch (event.target.name) {\n  case 'agreementSignature':setAgreementSignature(event.target.value); break;\n  case 'agreementChecked' : setAgreementChecked(event.target.checked); break;\n  case 'email':setEmail(event.target.value);break;\n  case 'password':setPassword(event.target.value);break;\n  case 'phone':setPhone(event.target.value);break;\n\n  case 'firstName':setFirstName(event.target.value);break;\n  case 'lastName':setLastName(event.target.value);break;\n  case 'pickupdate':setPickUpDate(event.target.value);break;\n  case 'dropoffDate': setDropoffDate(event.target.value); break;\n  case 'dropoffLocation': setDropoffLocation(event.target.value); break;\n  case 'pickupLocation': setPickupLocation(event.target.value); break;\n  default:\n    console.log(`Sorry, we are out of ${event.target.name}.`);\n\n  }\n\n}\n\n  const handleNext = async (event) => {\n          let canContinue = false;\n    if(activeStep === steps.length - 1){\n        //  const data = new FormData(event.currentTarget);\n       \n    }\n    else if (activeStep === 0){\n        //if(fullyValidated){\n          if(password ){\n          //register with the email and password\n              try{\n             const {error} =  dispatch.register({email, password, firstName,lastName, phone}) ;\n             console.log('result....',error);\n             //canContinue = success  ;\n             if(error)\n             setError(error);\n           else canContinue=true;\n            // console.log(success,'========',error )\n            }catch(err){\n        console.log('Error attempting to register user',err);\n            }\n          \n          }//if passwd\n    else { canContinue=true;}\nif (canContinue) {setActiveStep(activeStep + 1); setError(null)}\n\n   }//if(activestep ===0)\nelse if(activeStep ===1){\nsetError(null);\n  setActiveStep(activeStep + 1);\n\n}\n  }//handlenext();\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    setError(null);\n\n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 }}>\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout \n          </Typography>\n          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. You will be contacted shortly by your driver to make introductions and finalize the registration.\n                </Typography>\n                <Button variant='outlined' sx={{ marginTop:'20px' }}  size=\"large\" onClick={()=>{ navigate('/reservations');}}><AssignmentIcon />View Reservations</Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                      Back\n                    </Button>\n                  )}\n\n                  <Button\n                  disabled={!itineraryValidated(activeStep)}\n                  aria-label='Next'\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    sx={{ mt: 3, ml: 1 }}\n                  >\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </Box>\n    <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}\n          </Typography>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\n/** \n *  @module Checkout \n *  @description Autonomous reserve and checkout w/payment modulue\n */\nexport default Checkout;\n","import React from 'react';\nimport {  useSelector, useDispatch } from 'react-redux'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Input from '@mui/material/Input';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {PhoneAriaLabel, FirstNameAriaLabel, LastNameAriaLabel, EmailAriaLabel} from './constants'\nimport validator from 'validator';\nimport { useNavigate} from \"react-router-dom\";\n\n\n\nconst theme = createTheme();\n\n/**\n * Profile : Displays User specific and saved info\n */\nfunction Profile(props) {\n    const navigate = useNavigate();\n    const profile = useSelector((state)=>state?.profile);\n\n  const  dispatch = useDispatch();\n\n  React.useEffect(() => {\n     if(!profile) navigate(\"/\");\n  },[profile,navigate]);\n\n   \n\n \n const [firstName] = React.useState(profile?.firstName);\n  const [lastName] = React.useState(profile?.lastName);\n  const [email] = React.useState(profile?.email||'');\n  const [phone, setPhone] = React.useState(profile?.phone||'');\n\n  const [error] = React.useState('');\n\n\n\n   function itineraryValidated  (){\n    let validated = false;\n         const phoneValidated = phone && validator.isMobilePhone(phone);\n         const emailValidated = email && validator.isEmail(email);\n        \n         const firstNameValidated = firstName && !validator.isEmpty(firstName);\n         const lastNameValidated = lastName && !validator.isEmpty(lastName);\n           validated = (phoneValidated && emailValidated  && firstNameValidated && lastNameValidated);\n             return validated;\n}\n\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    dispatch({firstname:data.get('firstName'), lastname:data.get('lastName'), email:data.get('email'), phone:data.get('phone')});\n\n  };\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Profile\n          </Typography>\n       {error}\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"firstName\"\n                  defaultValue={firstName}\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  inputProps={FirstNameAriaLabel}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n              defaultValue={lastName}\n                  inputProps={LastNameAriaLabel}\n                  placeholder='Last Name'\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  defaultValue={email}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputProps={EmailAriaLabel}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField \n                  defaultValue={phone||''}\n                  fullWidth\n                  name=\"phone\"\n                  label=\"phone\"\n                  inputProps={PhoneAriaLabel}\n                  type=\"phone\"\n                  id=\"phone\"\n                  onChange={(event)=>setPhone(event.target.value)}\n                />\n              </Grid>\n             \n            </Grid>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={!itineraryValidated()}\n            >\n              Edit\n            </Button>\n           \n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default Profile;","import React from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {useNavigate} from \"react-router-dom\";\nimport {  useSelector,useDispatch } from 'react-redux'\nimport { login} from '../redux/reducers/appReducer';\n\n\nconst theme = createTheme();\nconst PasswordAriaLabel = { 'aria-label': 'Password' };\nconst EmailAriaLabel = { 'aria-label': 'EmailAddress' };\n\n/**\n * @description Perform Sign-in when user Submits form by \n * 1. Reads the form data \n * 2. Attempts to signin with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * \n */\nfunction SignIn() {\n   const stateError = useSelector((state)=>state.error);\n   const loginSuccessful = useSelector((state)=>state?.profile?.email);\n //const  app = useRealmApp();\nconst navigate = useNavigate();\n  const [error, setErrorMsg] = React.useState('');\n      const dispatch = useDispatch(); //(action)=>(console.log(action));\n \n\n     React.useEffect(() => {\nif(loginSuccessful) navigate('/');\n\n    /*setFirstName(realmApp?.currentUser?.customData?.firstname);\n    setLastName(realmApp?.currentUser?.customData?.lastname);\n    setEmail(realmApp?.currentUser?.customData?.email);\n    setPhone(realmApp?.currentUser?.customData?.phone);*/\n/*    if(app?.currentUser?.customData?.firstName){\n     \n      getProfile().then((pr)=>{console.log('profile result',pr); setProfile(pr)});      \n   }*/\n  });\n\n/**\n * Performs the Signin when user Submits form\n * \n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const credentials = {\n      email: data.get('email'),\n      password: data.get('password'),\n    }\ntry{     dispatch(login(credentials)); \n/*app.logIn(credentials);*/ }catch{ setErrorMsg('We are having difficulties logging you in.')} };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box\n          sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n              <Typography component=\"span\" aria-label='Error'  align=\"center\" sx={{color:'red'}}>\n    {error}{stateError}\n          </Typography>\n          <Box component=\"form\" onSubmit={(event)=>handleSubmit(event)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label='Enter Your Email Address'\n              id=\"email\"\n              inputProps={EmailAriaLabel}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              inputProps={PasswordAriaLabel}\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              aria-label=\"Submit\"\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Button  href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={()=>navigate('/signup')} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignIn;","import React from 'react';\nimport {useNavigate} from \"react-router-dom\";\nimport { useSelector,useDispatch } from 'react-redux'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n//import validator from 'validator'\nimport {FirstNameAriaLabel, LastNameAriaLabel, EmailAriaLabel, PasswordAriaLabel} from '../constants'\nimport {register} from '../redux/reducers/appReducer';\n\nconst theme = createTheme();\n\n\n/**\n * @description SignUp: take basic info and use it to register a user and log in \n * \n * \n */\nfunction SignUp() {\n   const stateError = useSelector((state)=>state.error);\n    const profile = useSelector((state)=>state?.profile);\n\n  const [error, setErrorMsg] = React.useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n     React.useEffect(() => {\nif(profile) navigate('/');\n},[profile,navigate]);\n/**\n * Performs the registration when user Submits form by \n * 1. reads the form data \n * 2. Attempts to register with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * @param event: the submit event\n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n   \n    const submissionInfo = {email:data.get('email'), password:data.get('password'), firstName:data.get('firstName'), lastName:data.get('lastName')};\n\n     dispatch(register(submissionInfo));          \n          \n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box  sx={{\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n           <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}{stateError}\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  inputProps={FirstNameAriaLabel}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  inputProps={LastNameAriaLabel}\n\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  inputProps={EmailAriaLabel}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  inputProps={PasswordAriaLabel}\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              aria-label=\"Submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Button aria-label='signInLink' onClick={()=>navigate('/signin')} href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignUp;","import React from \"react\";\nimport MainComponent from \"./home/MainComponent.js\";\nimport {BrowserRouter, Routes, Route} from 'react-router-dom';\nimport GeneralInfo from './home/GeneralInfo';\nimport Reservations from './checkout/Reservations';\nimport Checkout from './checkout/Checkout';\nimport Profile from './Profile';\nimport SignIn from './signinup/Signin';\nimport SignUp from './signinup/Signup';\n\n//import { useIdleTimer } from 'react-idle-timer';\n\n\n/*const loginAnonymous = async () => {\n    const user = await app.logIn(Realm.Credentials.anonymous());\n    console.log(user);\n  };*/\n\n\n/**\n *  the Main Component containing the app routes \n */\nfunction App() {\n\n  return (<BrowserRouter>\n     <Routes>\n          <Route exact path=\"/\" element={<MainComponent />} >\n             <Route index element={<GeneralInfo/>} /> \n             <Route path=\"/profile\" element={<Profile/>} />\n             <Route path=\"/signin\" element={<SignIn />} />\n             <Route path=\"/signup\" element={<SignUp />} />\n             <Route path=\"/checkout\" element={<Checkout />} />\n             <Route path=\"/reservations\" element={<Reservations />} />\n             <Route path=\"*\" element={<GeneralInfo />} />\n          </Route>      \n      </Routes>\n       </BrowserRouter>\n  );\n\n}\n\n\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  put,call, takeEvery, takeLatest, select } from 'redux-saga/effects'\n\n\nimport {logout,loginError, login,loginSucceeded, register,\nfetchSiteDataSuccess,fetchSiteDataError,loginAnonymously,\n refreshCustomData,fetchReservations,fetchReservationsError,fetchReservationsSuccess,\n  loadProfile,insertReservation} from './reducers/appReducer';\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\n\n\n/**\n * @description Register user\n * @param action : action.payload.credentials={email, password, firstName, lastName, phone}\n * \n */\nfunction* registerSaga(action) {\n  const app = yield select(state=>state.app);\n  const customData = yield call(app.registerWithEmail,action.payload );    \n  yield put(loadProfile( customData));\n}\n\n\n\n/**\n *  worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\nfunction* signInSaga(action) {\n   try {\n    console.log(action);\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put({type: \"USER_FETCH_FAILED\", message: e.message});\n   }\n}*/\n\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\nfunction* signOutSaga(action) {\n    const app = yield select(state=>state.app);\n     yield call(app.logOut );\n  \n}\n\n/**\n * worker Saga: will be fired on USER_FETCH_REQUESTED actions\n *\n */\n\nfunction* getReservationsSaga(action) {\n\n       const app = yield select(state=>state.app);\n\n   try {\n      const reservationsResult = yield call(app.getReservations );\n    yield put(fetchReservationsSuccess(reservationsResult) );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put(fetchReservationsError( e.message));\n   }\n}\n\n/**\n * worker Saga: will be fired on USER_FETCH_REQUESTED actions\n *\n */\n\nfunction* insertReservationSaga(action) {\n\n       const app = yield select(state=>state.app);\n\n   try {\n       yield call(app.insertReservations,action.payload );\n    yield put(fetchReservations() );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put(fetchReservationsError( e.message));\n   }\n}\n\n\n/**\n *  worker Saga: to be fired when unauthed user needs SiteData\n *\n */\nfunction* loginAnonymouslySaga(action) {\n     const app = yield select(state=>state.app);\n\n\n  const loginResult = yield call(app.loginAnonymously );\nconsole.log('anonymouse result in saga',loginResult);\n     \n const site = yield call(app.getSiteData);\nif(site.screen) \n  yield put(fetchSiteDataSuccess(site))\n yield call(app.logOut);\n\n}\n\n/**\n * @description Attempt to Log in. If successful,fetch reservations, profile \n * \n */\nfunction* loginSaga(action) {\n   const app = yield select(state=>state.app);\n\nconst email = action.payload.email;\nconst password = action.payload.password;\nconst loginResult = yield call(app.login,{email,password} );\n\n  if( loginResult)\n  { \n    yield put(loginSucceeded(loginResult));\n    const reservations = yield put(fetchReservations());\n    yield put(fetchReservationsSuccess(reservations));\n    yield put(refreshCustomData());\n  }\n  else \n   put(loginError(loginResult.error));\n\n}\n\n\n/**\n * @description ensure the customData object is uptoData \n * \n */\nfunction* customDataRefreshSaga(action) {\n  const app = yield select(state=>state.app);\n  const customData = yield call(app.reloadCustomData );    \n  yield put(loadProfile( customData));\n}\n\n\n/**\n  Starts fetchUser on each dispatched `USER_FETCH_REQUESTED` action.\n  Allows concurrent fetches of user.\n\nfunction* UnhandledSaga(action) {\n  console.log('UnhandledSaga',action);\n}\n*/\n\n\n/**\n *  worker Saga: will be fired on USER_FETCH_REQUESTED actions\n */ \nfunction* fetchSiteDataSaga(action) {\n     const app = yield select(state=>state.app);\n\n   try {\n       const siteData =   yield call(app.getSiteData);\nconsole.log('siteData retrieved', siteData)\n    yield put( fetchSiteDataSuccess(siteData) );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n    console.log(e);\n      yield put(fetchSiteDataError( e.message));\n   }\n }\n\n\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* mySaga(app) {\n  yield takeLatest(loginAnonymously, loginAnonymouslySaga);\n\n  yield takeLatest(login, loginSaga);\n  yield takeEvery(logout, signOutSaga);\n  yield takeEvery(refreshCustomData,customDataRefreshSaga);\n  yield takeLatest(insertReservation,insertReservationSaga);\n  yield takeLatest(register,registerSaga);\n  yield takeLatest(fetchReservations,getReservationsSaga);\nyield takeLatest('FETCH_SITEDATA',fetchSiteDataSaga);\n}\n\nexport default mySaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './css/App.css';\n\nimport App from './App';\nimport { RealmDAO } from \"./RealmDAO.js\";\nimport reportWebVitals from './reportWebVitals';\n//import RealmApolloProvider from \"./graphql/RealmApolloProvider\";\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { Provider } from 'react-redux'\n\nimport {appReducer,refreshCustomData,fetchReservations,loginAnonymously,loadBackEnd,fetchSiteData} from './redux/reducers/appReducer'\nimport mySaga from './redux/sagas';\nimport {logger} from 'redux-logger';\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\nconst initialState={\n  auth:{loginState :{isLoggedIn:false, isLoggingIn:false},\n            backEnd:{}\n       },\n       app:{},\n  reservations:[],\n  profile:{},\n  siteData:{},\n  error:''\n}\n\n// mount it on the Store\n   const store = createStore(appReducer, initialState,  applyMiddleware(sagaMiddleware, logger))\n   sagaMiddleware.run(mySaga);\n\n   const app = new RealmDAO(process.env.REACT_APP_MONGODB_REALM_APPID);\n   store.dispatch(loadBackEnd(app));\n\n   //const user = app.logIn(Realm.Credentials.anonymous());\n\n    // then run the saga\n   if(!app.app.currentUser){\n    console.log('no currentUser');\n      store.dispatch(loginAnonymously());\n   \n  }\n   else{\n    console.log('current user ound route');\n    //app.app.currentUser.refreshCustomData();\n    store.dispatch(refreshCustomData());\nconsole.log('1');\n    store.dispatch(fetchSiteData());\n    console.log('2');\n\n    store.dispatch(fetchReservations());\n    console.log('3');\n\n   }\n\n  /*\n          const credentials = {\n          email: 'jaxonetic@gmail.com',\n          password: '123456789',\n        }\n    app.logIn(Realm.Credentials.emailPassword(credentials.email, credentials.password));\n  //  store.dispatch(refreshCustomData());\n            \n    sagaMiddleware.run(mySaga, app);\n    console.log('placibo app::',app);\n\n    if(!app.currentUser)\n    {\nconsole.log('no app cuser',app);\n\n    }\n    else{//there is aleadry a user \n        console.log(app);\n\n        }*/\n        /*\n        try {\n        store.dispatch(loadBackEnd(app));\n        if(!app?.currentUser)\n        {\n          const user = app.login(Realm.Credentials.anonymous());\n          store.dispatch()\n        }\n        store.dispatch(fetchSiteData());\n       // console.log(store.getState());\n    \n   \n// load our back end access\n//console.log(app.login);\n\n\n}catch(err){\n  console.log('Unable to load Back End', err);\n}\n*/\n  \nconsole.log(store.getState());\n// render the application\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n\n        <App />\n\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as Realm from \"realm-web\";\nimport { handleAuthenticationError, parseAuthenticationError} from './constants';\n    import emailjs, { init } from 'emailjs-com';\n\n/**\n * @class\n * @description Using the Provider and the React.Context to store teh DB link.\n * \n * @param demoAppId : The Realm Aplication ID\n * @param children : the nodes nested within component\n */\nexport class RealmDAO  {\n\n  constructor( demoAppId){\nthis.app = new Realm.App(demoAppId||process.env.REACT_APP_MONGODB_REALM_APPID);\n  \n  }\n\n/**\n * @desc ensure customData object is not stale\n *\n*/\n reloadCustomData = async ()=>{\n await this.app?.currentUser?.refreshCustomData(); \n return this.app?.currentUser?.customData;\n}\n   \n\n  /**\n   *  login with the provided Login Credentials.  After loggin in , set Profile and Reservations\n   */\n  loginAnonymously = async  ()=> {\n      const loginResult = await this.app?.logIn(Realm.Credentials.anonymous());\n      console.log(\"loginAnonymously:\",loginResult);\n     // await this.getSiteData();\n\n      //this.logOut();\n      return loginResult;\n}\n\n  /**\n   *  login with the provided Login Credentials.  After loggin in , set Profile and Reservations\n   */\n  login =async  (credentials) =>{\nconsole.log(credentials)\n    try\n    {\n    //tell store that a login is being attempted\n   //dispatch(login('Attempting to login'));\n   const loginResult =  await this.app.logIn(Realm.Credentials.emailPassword(credentials.email, credentials.password));\n   return loginResult;\n    } catch(err)\n    {\n      const msg = handleAuthenticationError(err);\n      console.log(msg,'--',err);\n     //  dispatch(loginError(msg));\n    }\n  }\n \n\n/**\n *  Logout current user, by clearing the CurrentUSer, Profile, and Reservations\n */\n  logOut = async ()=> {\n    // Log out the currently active user\n    this.app?.currentUser?.logOut();\n  }\n\n\n/**\n * Register user by autoconfirmaed email, \n * @params email, password needed for registration\n * @params firstName, lastName : needed for profile\n * @params phone: optional\n * \n */\n  registerWithEmail =async  (registerData)=> {\n    try{\n     // const args = {email,password,firstName, lastName, phone};\n     //  dispatch(register(args));\n\n\n     await this.app.emailPasswordAuth.registerUser(registerData.email, registerData.password);\n      await this.app?.logIn(Realm.Credentials.emailPassword(registerData.email, registerData.password));\n    //      dispatch(refreshCustomDataSuccess());\n    try {\n         //add CustomData\n         await this.app?.currentUser?.functions?.AddUserData({...registerData, userid:this.app?.currentUser?.id});\n    \n          return  this.reloadCustomData();\n\n    }catch(err1){console.log(\"errer adding userdata\",err1)}\n       // const prof = await newUser.functions.GetUserData(newUser.id);\n    \n\n    //dispatch(registerSuccess({user:newUser, profile:app?.currentUser?.customData, reservations:reservations}))\n/*\ntry {\n      await getReservations();\n}catch(err2){console.log('error gettinng reservation',err2)}\n*/\n     return {success:true};\n}catch(error){\n  console.log(error);\n   //   dispatch({type: 'REGISTER_FAILED', payload:{error:handleAuthenticationError(error)} });\n\n  return {error:handleAuthenticationError(error)};\n}\n\n  }\n\n\n/**\n * Return Profile of registered user.\n * \n */\n getProfile = async ()=> {\n    \n     let prof = null;\n     try{\n     prof = await this.app?.currentUser?.functions?.GetUserData(this.app?.currentUser?.id);\n    }catch(error){\n       const { status, message } = parseAuthenticationError(error);\n       return {error:status+message};\n    }\nreturn prof;\n}\n\n\n\n\n/**\n * Read Site Data: If user object has the *?.functions* variable available\n *   then retrieve the Site Data, otherwise anonymously login first for access \n *   to backend functions.\n *  @return site =  {pageData:HOME_PAGE_DEFAULT, cardData:TIERS};\n */\n  getSiteData = async ()=> {\n \n   //  let site =  {pageData:HOME_PAGE_DEFAULT, cardData:TIERS};\n    try{\n       const site =   await this.app.currentUser.functions.GetSiteData();\n      console.log('returning,',site);\n      return site;\n    }catch(error){\n     const {  message } = parseAuthenticationError(error);\n\n           return {error:message};\n    }\n}\n\n\n/**\n * Edits data  for the Home Page by a registered Admin user.  \n * @param newPageData takes a HOME_PAGE_DEFAULT type object\n */\n editHomeData = async (newPageData) =>{\n  \ntry{\nif (newPageData){\nconst obj ={screen:'home_general',pageData:newPageData.pageData, cardData:newPageData.cardData}\nconsole.log(newPageData,'passing to edithomefuncion',obj);\n\n     const editResults = await this.app?.currentUser?.functions.EditHomeData(newPageData);\nconsole.log('editResults from realm', editResults);\nthis.setSiteData({screen:'home_general',pageData:newPageData.pageData, contactData:newPageData.contactData, cardData:newPageData.cardData});\n\n}else\n{\n  console.log('reseting dome data')\n  const resetResults = await this.app?.currentUser?.functions?.EditHomeData();\n  console.log(resetResults);\n  const newdata = await this.getSiteData();\n  console.log('new site returned from db=',newdata);\n\n}\n}catch(error){\n  console.log(\"EditHomeData Error\",error);\n  const {  message } = parseAuthenticationError(error);\n       console.log(message);\n       return {error:message};\n}\n \n\n}\n\n\n\n/**\n *  Allows a registered user to add a new reservation\n * @param {reservation}\n */\n insertReservations = async  (reservation)=> {\n\n    const newReservation = {...reservation, dateAdded :(new Date()), userid:this.app.currentUser?.id };\n   const result = await this.app.currentUser?.functions.InsertReservation(newReservation);\n\n//dispatch(createAction('SENDING_EMAIL/SMS_NOTIFICATION')())\ninit(process.env.REACT_APP_EMAILJS_USERID);\nconst message = `Reservation requested from (${newReservation.firstName} ${newReservation.lastName}). Contact Info:${newReservation.phone}, ${newReservation.email}`;\n const emailTemplate  = \n {to_name:'Awan', from_name:'8Angels Transportation Email Notifier',\n  message:message};\n\nconst emailResult = await emailjs.send(process.env.REACT_APP_SERVICEID, process.env.REACT_APP_EMAILJS_TEMPLATEID, emailTemplate, process.env.REACT_APP_EMAILJS_USERID).then((result)=>console.log('Notification Success', result),(error)=>console.log('Notification Error', error));\nconsole.log(\"Notification Result\",emailResult);\n return result;\n}\n\n\n/**\n *  Return all Reservations by query, for loggedIn and connected users\n *  @return JSON.parse(reservation_array)\n */\ngetReservations = async  ()=>{\n  try\n  {\n  const res = await this.app.currentUser?.functions?.FindReservation();\n  if(!res) return [];\n\n  return (JSON.parse(res));\n}catch(err){\nreturn {error:err};\n}\n}\n\n\n//the variables wrapped and available to the components within this Providor\n // const wrapped = { ...app,siteData,editHomeData, currentUser,registerWithEmail,insertReservations, reservations,profile,getReservations, getProfile, logIn, logOut };\n\n}\n"],"sourceRoot":""}