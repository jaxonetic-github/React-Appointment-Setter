{"version":3,"sources":["constants.js","redux/reducers/appReducer.js","navigation/ApplicationBar.js","navigation/Footer.js","calendars/fullScreenAgendaDialog.js","home/MainComponent.js","home/ContactCard.js","home/GeneralInfo.js","checkout/Reservations.js","checkout/setAppointmentFragment.js","checkout/AgreementForm.js","checkout/squarePayComponent.js","checkout/Review.js","checkout/Checkout.js","profile/Profile.js","signinup/Signin.js","signinup/Signup.js","home/appointmentHome.js","App.js","RealmDAO.js","reportWebVitals.js","redux/sagas.js","index.js"],"names":["isAdminSelector","state","app","currentUser","customData","email","schedule","event_id","Math","random","title","start","Date","end","RESERVATION","userid","pickUpDate","pickUpTime","dropOffLocation","pickupLocation","firstName","lastName","createdDated","phone","appDAO","refreshCustomData","logIn","logOut","firstname","lastname","loginAnonymously","fetchSiteData","fetchReservations","getSiteData","pageData","HOME_PAGE_DEFAULT","cardData","TIERS","contactData","CONTACTINFO","screen","getReservations","insertReservations","INITIAL_STATE","auth","loginState","isLoggedIn","isLoggingIn","backEnd","availability","reservations","profile","siteData","settings","notifyAfterReservation","error","NameOnCardAriaLabel","EmailAriaLabel","PhoneAriaLabel","FirstNameAriaLabel","LastNameAriaLabel","PasswordAriaLabel","AgreementSignatureAriaLabel","AgreementAriaLabel","AgreementCheckboxAriaLabel","subtitle","reservationButton","paragraphs","price","description","imageURL","buttonText","buttonVariant","COMPANY_NAME","FEE_FORMULA","name","desc","handleAuthenticationError","err","returnMsg","parseAuthenticationError","status","message","errorType","console","log","parts","split","reason","length","trimStart","reasonRegex","match","groups","createAction","fetchSiteDataError","fetchSiteDataSuccess","loadBackEnd","loadProfile","loadUser","bubbleError","loginError","addScheduledItem","addScheduledItemSuccess","addScheduledItemError","fetchScheduledItems","fetchScheduledItemsSuccess","fetchScheduledItemsError","login","loginSucceeded","logout","register","registerSuccess","fetchReservationsSuccess","fetchReservationsError","insertReservation","insertReservationSuccess","editProfile","editProfileSuccess","editProfileError","creditPaymentSuccess","creditPaymenError","appReducer","createReducer","builder","addCase","action","trace","type","push","payload","user","authState","addDefaultCase","selectAuthedUserDataState","ApplicationBar","companyTitle","barColor","barHeight","dispatch","useDispatch","navigate","useNavigate","authedUserSelector","useSelector","hasProfileSelector","React","useState","anchorEl","setAnchorEl","location","useLocation","handleClose","useEffect","AppBar","sx","bgcolor","minHeight","height","color","Toolbar","Grid","container","spacing","item","xs","IconButton","size","edge","mr","onClick","event","currentTarget","Box","align","Typography","component","variant","gutterBottom","fontFamily","fontWeight","id","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","Copyright","props","Link","href","getFullYear","footers","Footer","GlobalStyles","styles","ul","margin","padding","listStyle","CssBaseline","Container","maxWidth","borderTop","theme","palette","divider","mt","py","justifyContent","map","footer","sm","FullScreenAgendaDialog","displayAs","onConfirm","scheduledItems","selectedDateTime","setSelectedDateTime","useTheme","handleConfirm","useMediaQuery","breakpoints","down","a","stampedEvent","finalEvent","target","value","toUTCString","Promise","res","rej","setTimeout","temporary","AccordionView","children","selectedDate","Accordion","AccordionSummary","expandIcon","AccordionDetails","AppScheduler","Scheduler","view","month","weekDays","weekStartOn","startHour","endHour","week","step","day","dialogMaxWidth","events","Object","keys","MainComponent","trigger","bannerURL","useScrollTrigger","Slide","appear","direction","in","borderRadius","ContactCard","componentData","Fragment","Card","minWidth","width","CardHeader","subheader","titleTypographyProps","subheaderTypographyProps","backgroundColor","mode","grey","CardContent","line","descriptionIndex","GeneralInfo","Reservations","bgColor","loginSuccessful","flexGrow","Table","TableHead","TableRow","TableCell","TableBody","reservation","index","createdDate","toString","toLocaleString","Divider","Button","SetAppointmentFragment","onChange","selectedLocation","setSelectedLocation","isPasswdNeeded","marginBottom","marginTop","isClearable","newArg","options","label","TextField","placeholder","inputProps","defaultValue","Input","fullWidth","required","autoComplete","PaymentForm","TextareaAutosize","minRows","style","FormControlLabel","control","Checkbox","md","SquarePaymentForm","handleSuccess","applicationId","process","cardTokenizeResponseReceived","token","buyer","createVerificationDetails","amount","billingContact","addressLines","familyName","givenName","countryCode","city","currencyCode","intent","locationId","ReviewFragment","List","disablePadding","product","ListItem","px","ListItemText","primary","secondary","paddingBottom","paddingTop","marginInline","borderBlock","pickupDate","dropOffDate","steps","createTheme","Checkout","setFirstName","setLastName","setEmail","password","setPassword","setError","setPhone","activeStep","setActiveStep","setPickUpDate","setDropoffDate","setDropoffLocation","setPickupLocation","agreementSignature","setAgreementSignature","agreementChecked","setAgreementChecked","paymentSucceeded","setPaymentSucceeded","scheduledItem","setScheduledItem","checked","handleNext","canContinue","mb","Paper","my","p","Stepper","pt","pb","Step","StepLabel","tmpRes","Review","successEvent","errors","Error","getStepContent","display","ml","disabled","currentStep","validated","phoneValidated","validator","isMobilePhone","emailValidated","isEmail","pickupLocationValidated","isEmpty","firstNameValidated","lastNameValidated","itineraryValidated","Profile","loggedInUser","isEmailValid","setIsEmailValid","isPhoneValid","setIsPhoneValid","isLastNameValid","setIsLastNameValid","isFirstNameValid","setIsFirstNameValid","componentValidated","handleSubmit","preventDefault","flexDirection","alignItems","Avatar","m","noValidate","onSubmit","validFirstName","validLastName","validEmail","validPhone","SignIn","stateError","setErrorMsg","data","FormData","credentials","get","ThemeProvider","autoFocus","SignUp","submissionInfo","AppointmentHome","CardMedia","alt","image","App","path","element","RealmDAO","demoAppId","functions","result","getScheduleItems","results","removeScheduledItems","DeleteFromAvailabilityCalendar","Realm","anonymous","loginResult","emailPassword","msg","registerWithEmail","registerData","emailPasswordAuth","registerUser","AddUserData","success","getProfile","prof","GetUserData","profileObj","EditProfile","GetSiteData","site","editHomeData","newPageData","obj","EditHomeData","editResults","setSiteData","resetResults","newdata","newReservation","dateAdded","InsertReservation","REACT_APP_BLOCK_NOTIFY_ON_RESERVE","init","emailTemplate","to_name","from_name","emailjs","send","then","FindReservation","JSON","parse","this","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","registerSaga","signOutSaga","getReservationsSaga","insertReservationSaga","loginAnonymouslySaga","loginSaga","editProfileSaga","customDataRefreshSaga","fetchSiteDataSaga","addScheduledItemSaga","fetchScheduleItemsSaga","appSaga","select","call","put","reservationsResult","modifiedCount","newItemResult","insertedId","takeEvery","sagaMiddleware","createSagaMiddleware","initialState","store","createStore","applyMiddleware","logger","run","saga","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dcd34c3f.chunk.js","sourcesContent":["/** module constants */\n\nexport const APP_NOTIFICATIONS = true;\n\n/** isAdmin state selector */\nexport  const isAdminSelector = state => (state?.app?.app?.currentUser?.customData?.email==='kurawan@yahoo.com') \nconst schedule = [\n    {\n      event_id: Math.random(),\n      title: \"Massage\",\n      start: new Date(\"2021 12 2 09:30\"),\n      end: new Date(\"2021 12 2 11:30\"),\n    },\n    {\n      event_id: Math.random(),\n      title: \"Reiki\",\n      start: new Date(\"2021 12 4 10:00\"),\n      end: new Date(\"2021 12 4 11:00\"),\n    },\n  ];\n\nexport const RESERVATION = {\n  userid:\"6182198ee43796e8d32aff28\",\n  pickUpDate:\"12:12:10\",\n  pickUpTime:\"02:03:04\",\n  dropOffLocation:\"dropoffdestinationf\",\n  pickupLocation:\"pickupdestinationf\",\n  firstName:\"Aa\",\n  lastName:\"Zz\",\n  email:\"az@email.com\",\n  createdDated:'2011:11:12',\n  phone:\"555-555-5555\"};\n\nconst app={\n  currentUser:{ \n      customData:{firstname:'first',\n            email:'first@test.com',\n            lastname:'test'\n            },\n      refreshCustomData:(()=>true),\n      logIn:(()=>true),\n      loginAnonymously:(()=>true),\n      fetchSiteData:(()=>true),\n      fetchReservations:(()=>true),\n  }\n}\n\nconst appDAO={\n      \n      refreshCustomData:(()=>({firstName:'first', email:'first@test.com', lastName:'test'  })),\n      logIn:(()=>true),\n      logOut:(()=>true),\n      app:app,\n      loginAnonymously:(()=>true),\n      getSiteData:(()=>({pageData:HOME_PAGE_DEFAULT, cardData:TIERS, contactData:CONTACTINFO,screen:''})),\n      getReservations:(()=>[{...RESERVATION}]),\n      insertReservations:(()=>true),\n  };\n\n\n/** \n *   @description Initial Reducer State @constant\n *   @type {string}\n *   @default\n */\nexport const INITIAL_STATE={\n  auth:{loginState :{isLoggedIn:false, isLoggingIn:false},\n            backEnd:{}\n       },\n       app:{...appDAO},\n  availability:schedule,\n  reservations:[RESERVATION],\n  profile:{ firstname:\"A\", lastname:\"Z\",  email:\"az@email.com\"},\n  siteData:{},\n  settings:{notifyAfterReservation:false},\n  error:''\n};\n/** \n *   @description Initial Reducer State @constant\n *   @type {string}\n *   @default\n */\nexport const INITIAL_STATE_EMPTY={\n  auth:{loginState :{isLoggedIn:false, isLoggingIn:false},\n            backEnd:{}\n       },\n       app:null,\n  reservations:[],\n  availability:[],\n  profile:null,\n  siteData:null,\n  settings:{notifyAfterReservation:false},\n  error:'Initial Empty State'\n};\n\n\n\n/******************    ARIA Labels   *************/\nexport const NameOnCardAriaLabel = { 'aria-label': 'CreditCardName' };\nexport const EmailAriaLabel = { 'aria-label': 'EmailAddress' };\nexport const PhoneAriaLabel = { 'aria-label': 'Phone' };\nexport const ErrorAriaLabel = { 'aria-label': 'Error' };\nexport const submitAriaLabel = { 'aria-label': 'Submit' };\nexport const FirstNameAriaLabel = { 'aria-label': 'FirstName' };\nexport const LastNameAriaLabel = { 'aria-label': 'LastName' };\nexport const PickUpDateAriaLabel = { 'aria-label': 'PickUpDate' };\nexport const PickUpLocationAriaLabel = { 'aria-label': 'PickupLocation' };\nexport const DropOffDateAriaLabel = { 'aria-label': 'DropOFfDate' };\nexport const DropOffLocationAriaLabel = { 'aria-label': 'DropOffLocation' };\nexport const PasswordAriaLabel = { 'aria-label': 'Password' };\nexport const AgreementSignatureAriaLabel = { 'aria-label': 'AgreementSignature' };\nexport const AgreementAriaLabel = { 'aria-label': 'Agreement' };\nexport const AgreementCheckboxAriaLabel = { 'aria-label': 'AgreementCheck' };\n \n\n/******* HOME PAGE user modifiable text **********/\n\nconst title = 'Service';\nconst subtitle = 'Entertainment and Pleasure';\nconst reservationButton = 'Make A Reservation';\nconst paragraph0Text = '8ANGELS is uniquely prepared to meet your private transportation needs. Our  program serves  a range of industries and occasions, including Concert/tours, sporting events, business venues, wedding events and more. You can depend on an affordable spacious vehicle. We\\'ve got you covered! ';\nconst paragraph1Text = 'This Vehicle is exclusively for transportation to and from hotels and events.  It is also a perfect choice to transport groomsmen and bridesmaids during wedding preparations'\nexport const HOME_PAGE_DEFAULT = {title, subtitle, reservationButton,paragraphs: [paragraph0Text, paragraph1Text]};\n\nexport const CONTACTINFO =  {\n    title: 'Contact Me',\n\n    price: '15',\n    description: [\n      'Caregiver:            Alora Cohen',\n      'Phone :           520-000-0000',\n      'Email :      aloracohen@yahoo.com', ],\n      imageURL: 'https://jaxonetic-github.github.io/React-Appointment-Setter/face_small.jpeg',\n    buttonText: 'Get started',\n    buttonVariant: 'contained',\n  };\n\nexport const TIERS = [\n  {\n    title: 'Massage',\n    price: 'For your Comfort and Protection',\n    description: [\n      'Cupping',\n      'Tai Massage',\n      'Full or Partial Massage',\n      'hand sanitizers and wipes',\n    ],\n     imageURL: 'https://instagram.fphx1-1.fna.fbcdn.net/v/t51.2885-15/e35/p1080x1080/217278443_267284748501693_421826271010334924_n.jpg?_nc_ht=instagram.fphx1-1.fna.fbcdn.net&_nc_cat=109&_nc_ohc=lkzL5Ic-xGYAX_Qd_gW&edm=APU89FABAAAA&ccb=7-4&oh=00_AT9oMY3usJg7o_4dBxwxY9RON92DfT5Dmaxk7G9CrRTLGg&oe=61BD5086&_nc_sid=86f79a',\n  },\n \n  {\n    title: 'Arrive in styles',\n    price: '30',\n    description: [\n      'Weddings',\n      'Airport Escorts',\n      'Business Conventions',\n      'Concentions',\n    ],\n      imageURL: 'https://raw.githubusercontent.com/jaxonetic-github/React-Reserver/3f90afcd4efbb7e8a62559deaf8162e7bcdba2b8/public/sideview_closeddoors.jpeg',\n\n  },\n]\n\nexport const COMPANY_NAME = 'Alchemeia';\nexport const HOME_BANNER_URL = 'https://instagram.fphx1-2.fna.fbcdn.net/v/t51.2885-15/e35/211493852_1515322732138516_6545539816536996866_n.jpg?_nc_ht=instagram.fphx1-2.fna.fbcdn.net&_nc_cat=104&_nc_ohc=naMzpoWL_vcAX_Qd7eT&edm=APU89FABAAAA&ccb=7-4&oh=d85cf58ed87659d2c7cf801501da532f&oe=61BD9AF4&_nc_sid=86f79a';\nexport const APPBAR_INITIAL_HEIGHT = 64;\nexport const APPBAR_INITIAL_COLOR = 'white';\n\n/*********************  fee structue used by Review screen to display to user  ******/\nexport const FEE_FORMULA = [\n  {\n    name: 'Reservation Fee',\n    desc: 'Due by Pickup : Flat fee',\n    price: '$150.00',\n  },\n  {\n    name: 'Hourly adjustments',\n    desc: 'ex. $20 hour after 3 hours',\n    price: '$3.45',\n  },\n  {\n    name: 'Mileage adjustments',\n    desc: 'ex. $3/mi after 150 miles',\n    price: '$3.00/mi',\n  },\n  {\n    name: 'Security Deposit',\n    desc: '',\n    price: '$100.00',\n  },\n  { name: 'Shipping', desc: '', price: 'Free' },\n];\n\n/************************** DB **************************/\n\n/***************Authentication Specific *******************/\nexport function handleAuthenticationError(err) {\n  let returnMsg=null;\n  const { status, message } = parseAuthenticationError(err);\n  const errorType = message || status;\n  console.log(err,'   ===',message,'---', status);\n  switch (errorType) {\n    case \"invalid username\":\n       returnMsg = \"Invalid email address.\" ;\n      break;\n    case \"invalid username/password\":\n    case \"invalid password\":\n    case \"401\":\n\n      returnMsg =  \"Incorrect password.\";\n      break;\n    case \"name already in use\":\n    case \"409\":\n//      setError((err) => ({ ...err, errorMsg: \"Email is already registered.\" }));\n      returnMsg = \"Email is already registered.\" ;\n      break;\n    case \"password must be between 6 and 128 characters\":\n    case \"400\":\n     // setError((err) => ({...err,  errorMsg: \"Password must be between 6 and 128 characters.\"  }));\n      returnMsg = \"Password must be between 6 and 128 characters.\";\n      break;\n    default:\n      break;\n  }\n  return returnMsg ;\n}\n\nexport function parseAuthenticationError(err) {\n  const parts = err.message.split(\":\");\n  const reason = parts[parts.length - 1].trimStart();\n  if (!reason) return { status: \"\", message: \"\" };\n  const reasonRegex = /(?<message>.+)\\s\\(status (?<status>[0-9][0-9][0-9])/;\n  const match = reason.match(reasonRegex);\n  const { status, message } = match?.groups ?? {};\n  return { status, message };\n}","\n/** @module reducer \n * \n * @desccription Uses reduxjs/tookit for Redux reducer and action creation \n */\n\nimport { createAction, createReducer } from '@reduxjs/toolkit'\nimport {INITIAL_STATE } from '../../constants.js';\nexport const FETCH_SITEDATA ='FETCH_SITEDATA';\nexport const FETCH_SITEDATA_SUCCESS ='FETCH_SITEDATA_SUCCESS';\nexport const FETCH_SITEDATA_ERROR ='FETCH_SITEDATA_FAILED';\nexport const FETCH_RESERVATION ='FETCH_RESERVATIONS';\nexport const FETCH_RESERVATION_SUCCESS ='FETCH_RESERVATION_SUCCESS';\nexport const FETCH_RESERVATION_ERROR ='FETCH_RESERVATION_FAILED';\nexport const RESERVATION_INSERT_ERROR ='RESERVATION_INSERT_FAILED';\nexport const RESERVATION_INSERT_SUCCESS ='RESERVATION_INSERT_SUCCESS';\nexport const RESERVATION_INSERT ='RESERVATION_INSERT_REQUESTED';\nexport const LOGIN_SUCCEEDED ='LOGIN_SUCCEEDED';\nexport const LOGIN_ERROR ='LOGIN_FAILED';\nexport const LOGIN ='LOGIN';\nexport const LOGOUT ='LOGOUT';\nexport const REGISTER_SUCCESS ='REGISTER_SUCCESS';\nexport const REGISTER_ERROR ='REGISTER_FAILED';\nexport const REGISTER ='REGISTER_REQUESTED';\nexport const USERDATA_FETCH ='USERDATA_FETCH';\nexport const USERDATA_FETCH_SUCCESS ='USERDATA_FETCH_SUCCESS';\nexport const USERDATA_FETCH_ERROR ='USERDATA_FETCH_ERROR';\nexport const EDIT_PROFILE ='EDIT_PROFILE';\nexport const EDIT_PROFILE_SUCCESS ='EDIT_PROFILE_SUCCESS';\nexport const EDIT_PROFILE_ERROR ='EDIT_PROFILE_ERROR';\nexport const FETCH_BACKEND ='LOAD_BACKEND';\nexport const FETCH_BACKEND_SUCCESS ='LOAD_BACKEND_SUCCESS';\nexport const FETCH_BACKEND_ERROR ='LOAD_BACKEND_ERROR';\nexport const BUBBLE_ERROR ='BUBBLEERROR';\nexport const LOAD_USER='LOAD/USER';\nexport const LOAD_PROFILE = \"LOAD_PROFILE\";\nexport const ADD_SCHEDULED_ITEM = \"Add Scheduled Item\";\nexport const ADD_SCHEDULED_ITEM_SUCCESS = \"Add Scheduled_ITEMS_SUCCESS\";\nexport const ADD_SCHEDULED_ITEM_ERROR = \"Add Scheduled_ITEMS_ERROR\";\nexport const REMOVE_SCHEDULED_ITEM = \"REMOVEScheduled Item\";\nexport const REMOVE_SCHEDULED_ITEM_SUCCESS = \"REMOVEScheduled_ITEMS_SUCCESS\";\nexport const REMOVE_SCHEDULED_ITEM_ERROR = \"REMOVEScheduled_ITEMS_ERROR\";\nexport const FETCH_SCHEDULED_ITEMS = \"FETCH_Scheduled_ItemS\";\nexport const FETCH_SCHEDULED_ITEMS_SUCCESS = \"FETCH_Scheduled_ITEMS_SUCCESS\";\nexport const FETCH_SCHEDULED_ITEMS_ERROR = \"FETCH_Scheduled_ITEMS_ERROR\";\nexport const CREDIT_PAYMENT_SUCCESS = 'CREDIT_PAYMENT_SUCCESS';\nexport const CREDIT_PAYMENT_ERROR = 'CREDIT_PAYMENT_ERROR';\nexport const LOGIN_ANONYMOUSLY = 'LOGIN_ANONYMOUSLY';\n\n\n\n\nexport const fetchSiteData = createAction(FETCH_SITEDATA);\nexport const fetchSiteDataError = createAction(FETCH_SITEDATA_ERROR);\nexport const fetchSiteDataSuccess = createAction(FETCH_SITEDATA_SUCCESS);\nexport const loadBackEnd = createAction(FETCH_BACKEND);\nexport const loadProfile = createAction(LOAD_PROFILE);\nexport const loadUser = createAction(LOAD_USER);\nexport const loadBackEndError = createAction(FETCH_BACKEND_ERROR);\nexport const loadBackEndSuccess = createAction(FETCH_BACKEND_SUCCESS);\n\nexport const bubbleError = createAction(BUBBLE_ERROR);\n\nexport const loginError = createAction(LOGIN_ERROR);\nexport const loginAnonymously = createAction(LOGIN_ANONYMOUSLY);\n\n/** \n * \n *  @description addScheduledItem  plain text Action\n\n *  @constant\n *   @type {function}\n *   @default\n * @returns {string}  the addItem string action\n */\nexport const removeScheduledItem = createAction(REMOVE_SCHEDULED_ITEM);\nexport const removeScheduledItemSuccess = createAction(REMOVE_SCHEDULED_ITEM_SUCCESS);\nexport const removeScheduledItemError = createAction(REMOVE_SCHEDULED_ITEM_ERROR);\n/** \n * \n *  @description addScheduledItem  plain text Action\n\n *  @constant\n *   @type {function}\n *   @default\n * @returns {string}  the addItem string action\n */\nexport const addScheduledItem = createAction(ADD_SCHEDULED_ITEM);\nexport const addScheduledItemSuccess = createAction(ADD_SCHEDULED_ITEM_SUCCESS);\nexport const addScheduledItemError = createAction(ADD_SCHEDULED_ITEM_ERROR);\n\n/** \n * \n *  @description FETCH  plain text ActionS\n\n *  @constant\n *   @type {function}\n *   @default\n * @returns {string}  the FETCH string action\n */\nexport const fetchScheduledItems = createAction(FETCH_SCHEDULED_ITEMS);\nexport const fetchScheduledItemsSuccess = createAction(FETCH_SCHEDULED_ITEMS_SUCCESS);\nexport const fetchScheduledItemsError = createAction(FETCH_SCHEDULED_ITEMS_ERROR);\n\n/** \n * \n *  @description loginSucceeded()   plain text Action\n\n *  @constant\n *   @type {function}\n *   @default\n * @returns {string}  the login string action\n */\nexport const login = createAction(LOGIN);\n\n/** \n * @description loginSucceeded()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const loginSucceeded = createAction(LOGIN_SUCCEEDED);\n/** \n * @description logout()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const logout = createAction(LOGOUT);\n/** \n * @description register()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const register = createAction(REGISTER)\n/** \n * @description registerSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const registerSuccess = createAction(REGISTER_SUCCESS);\n/** \n * @description registerError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const registerError = createAction(REGISTER_ERROR)\n\n/** \n * @description fetchReservations()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservations = createAction(FETCH_RESERVATION);\n/** \n * @description fetchReservationsSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservationsSuccess = createAction(FETCH_RESERVATION_SUCCESS);\n/** \n * @description fetchReservationsError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const fetchReservationsError = createAction(FETCH_RESERVATION_ERROR);\n/** \n * @description insertReservation()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const insertReservation = createAction(RESERVATION_INSERT);\n/** \n * @description insertReservationSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const insertReservationSuccess = createAction(RESERVATION_INSERT_SUCCESS);\n/** \n * @description insertReservationError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const insertReservationError = createAction(RESERVATION_INSERT_ERROR);\n\n/** \n * @description refreshCustomData()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n * \n */\n export const editProfile = createAction(EDIT_PROFILE);\n/** \n * @description refreshCustomDataSuccess()   plain text Action\n * @param EDIT_PROFILE : {firstname, lastname, email, phone}\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const editProfileSuccess = createAction(EDIT_PROFILE_SUCCESS);\n/** \n * @description refreshCustomDataError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const editProfileError = createAction(EDIT_PROFILE_ERROR);\n\n/** \n * @description refreshCustomData()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const refreshCustomData = createAction(USERDATA_FETCH);\n/** \n * @description refreshCustomDataSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const refreshCustomDataSuccess = createAction(USERDATA_FETCH_SUCCESS);\n/** \n * @description refreshCustomDataError()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\n export const refreshCustomDataError = createAction(USERDATA_FETCH_ERROR);\n/** \n * @description creditPaymentSuccess()   plain text Action\n *  @constant\n *   @type {function}\n *   @default\n */\nexport const creditPaymentSuccess = createAction(CREDIT_PAYMENT_SUCCESS);\n\n/** \n * @description creditPaymenError()   plain text Action\n *  @constant\n *   @type {function}\n */export const creditPaymenError = createAction(CREDIT_PAYMENT_ERROR);\n\n\n\n/**\n * @description Main/Initial App Redux Reducer\n *   @default\n\n * @returns The new state\n */\nexport const appReducer = createReducer(INITIAL_STATE, (builder) => {\n\n  builder\n  .addCase(addScheduledItemSuccess, (state, action) => {\n      state.trace = action.type;\n      state.availability.push(action.payload);\n      return state;\n    })\n  .addCase(fetchScheduledItemsSuccess, (state, action) => {\n      state.trace = action.type;\n      state.availability = action.payload;\n      return state;\n    })\n  .addCase(addScheduledItemError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    })\n  .addCase(fetchScheduledItemsError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    })\n\n  .addCase(creditPaymentSuccess, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n    .addCase(creditPaymenError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    })\n      .addCase(loadUser, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload;\n      return state;\n    })\n      .addCase(loadProfile, (state, action) => {\n      state.trace = action.type;\n      state.profile = action.payload;\n      return state;\n    })      \n    .addCase(fetchSiteData, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n        .addCase(fetchSiteDataSuccess, (state, action) => {\n      state.trace = action.type;\n      state.siteData= action.payload\n      return state;\n    })\n    .addCase(refreshCustomData, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n    .addCase(editProfile, (state, action) => {\n      state.trace = action.type;\n      return state;\n    })\n     .addCase(editProfileSuccess, (state, action) => {\n      state.trace = action.type;\n      state.profile = action.payload;\n      return state;\n     })\n     .addCase(editProfileError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    }).addCase(registerSuccess, (state, action) => {\n      state.trace = action.type;\n      state.user = action.payload.user;\n      state.profile = action.payload.profile;\n      state.reservations= action.payload.reservations? action.payload.reservations:[];\n\n      return state;\n    })\n      .addCase(loadBackEnd, (state, action) => {\n      state.trace = action.type;\n      state.app= action.payload;\n      return state;\n    })\n    .addCase(loginSucceeded, (state, action) => {\n       state.trace = action.type;\n       state.authState = {status :'Logged In successfully'};\n       state.user = action.payload.user;\n       state.profile = action.payload.profile;\n       //state.reservation= action.payload.reservations;\n      state.reservations= action.payload.reservations? action.payload.reservations:[];\n\n    return state;\n    })\n      .addCase(loginError, (state, action) => {\n       state.trace = action.type;\n       state.error = action.payload;\n      state.authState = {status :'Error while Logging In'};\n\n    return state;\n    })\n    .addCase(login, (state, action) => { \n             state.trace = action.type;\n             state.error = '';\n            state.authState = {status :'Logging In'};\n      return state;\n    })\n    .addCase(fetchReservations, (state, action) => {\n    state.trace = action.type; \n      return state;\n    })\n    .addCase(fetchReservationsSuccess, (state, action) => {\n    state.trace = action.type; \n     state.reservations = action.payload;\n      return state;\n    })\n    .addCase(insertReservation, (state, action) => {\n    state.trace = action.type; \n      return state;\n    })\n    .addCase(insertReservationSuccess, (state, action) => {\n    state.trace = action.type; \n     // state.reservations= state.reservations? state.reservations.push(action.payload):[action.payload];\n      return state;\n    })\n    .addCase(logout, (state, action) => {\n      state.trace = action.type;\n      state.profile=null;\n      state.user = null;\n      state.reservations = [];\n      state.authState = null;\n      return state;\n    })\n    .addCase(bubbleError, (state, action) => {\n      state.trace = action.type;\n      state.error = action.payload;\n      return state;\n    }).addDefaultCase((state, action) =>{\n          state.trace = action.type;\n            return state;})\n})","import React  from 'react';\nimport { useSelector,useDispatch } from 'react-redux'\n\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\n\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\nimport HomeIcon from '@mui/icons-material/Home';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport MenuItem from '@mui/material/MenuItem';\nimport Grid from '@mui/material/Grid';\nimport Menu from '@mui/material/Menu';\nimport {logout} from '../redux/reducers/appReducer'\n\nimport { useNavigate,useLocation} from \"react-router-dom\";\n\nconst selectAuthedUserDataState = state => state?.profile;\n//const selectProfile = state=>state?.profile;\n/**\n * @description Main Application Bar with menus, title and  greeting tologged in users\n */\nfunction ApplicationBar({companyTitle, barColor, barHeight}) {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const authedUserSelector = useSelector(selectAuthedUserDataState);\n  const hasProfileSelector = useSelector((state)=>state?.profile?.email);\n  //const [authedUser, setAuthedUser] = useState(authedUserSelector?.email);\n  const [anchorEl, setAnchorEl] = React.useState(null);\nconst location = useLocation();\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  React.useEffect(() => {\n    console.log('Applicatin Bar location change? ',location)\n\n  },[hasProfileSelector, navigate, location, ]);\n\n   \n  return (\n \n      <AppBar  sx={{  bgcolor: barColor, minHeight:0, height:barHeight, color:'black' }}>\n        <Toolbar >\n        <Grid container spacing={3}>\n  <Grid item xs={1}>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            aria-label=\"menu\"\n            sx={{ mr: 4,  }}\n            onClick={handleMenu}\n          >\n            <MenuIcon />\n          </IconButton>       \n  </Grid>\n  <Grid item xs={10}>\n    <Box align='center'  ><Typography component=\"div\"\n          variant=\"h4\"\n          align=\"center\"\n          color=\"text.primary\"\n          gutterBottom\n          sx={{fontFamily: \"cursive\",fontWeight: 650}}\n         >\n            {companyTitle}\n          </Typography>\n          </Box>\n          \n  </Grid>\n\n</Grid>\n      { hasProfileSelector  ?   <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n          \n                <MenuItem onClick={()=>{handleClose(); navigate('profile');}}><AccountCircle />Profile</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); navigate('/reservations');}}><AssignmentIcon />Reservations</MenuItem>\n                <MenuItem onClick={()=>{handleClose(); dispatch(logout()); navigate('/');}}>Logout</MenuItem>\n              </Menu>\n               :<Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n              >\n                <MenuItem onClick={()=>{handleClose(); navigate('/');}}><HomeIcon/>Home</MenuItem>\n                  <MenuItem onClick={()=>{handleClose();  navigate('/signin');}}>SignIn</MenuItem>\n               \n              </Menu>\n      }\n         {hasProfileSelector? `Hello,${authedUserSelector?.firstname}` : hasProfileSelector}\n        </Toolbar>\n      </AppBar>\n   \n  );\n}\n\nexport default ApplicationBar;\n","import * as React from 'react';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\n//import StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport Link from '@mui/material/Link';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\n//import { useNavigate} from \"react-router-dom\";\n\nimport {COMPANY_NAME} from '../constants.js';\n\nfunction Copyright(props) {\n  return (\n    <Typography variant=\"body2\" color=\"text.secondary\" align=\"center\" {...props}>\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://mui.com/\">\n       {COMPANY_NAME}\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\nconst footers = [\n  {\n    title: 'Company',\n    description: ['Team', 'History', 'Contact us', 'Locations'],\n  },\n  {\n    title: 'Features',\n    description: [ 'Developer stuff'],\n  },\n  {\n    title: 'Our Network',\n    description: ['Resource'],\n  },\n  {\n    title: 'Legal',\n    description: ['Privacy policy', 'Terms of use'],\n  },\n];\n\n\nexport default function Footer() {\n//  const navigate = useNavigate();\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n    \n      <Container\n        maxWidth=\"md\"\n        component=\"footer\"\n        sx={{\n          borderTop: (theme) => `1px solid ${theme.palette.divider}`,\n          mt: 8,\n          py: [3, 6],\n        }}\n      >\n        <Grid container spacing={4} justifyContent=\"space-evenly\">\n          {footers.map((footer) => (\n            <Grid item xs={6} sm={3} key={footer.title}>\n              <Typography variant=\"h6\" color=\"text.primary\" gutterBottom>\n                {footer.title}\n              </Typography>\n              <ul>\n                {footer.description.map((item) => (\n                  <li key={item}>\n                    <Link href=\"#\" variant=\"subtitle1\" color=\"text.secondary\">\n                      {item}\n                    </Link>\n                  </li>\n                ))}\n              </ul>\n            </Grid>\n          ))}\n        </Grid>\n        <Copyright sx={{ mt: 5 }} />\n      </Container>\n      {/* End footer */}\n    </React.Fragment>\n  );\n}\n\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport ListItemText from '@mui/material/ListItemText';\nimport ListItem from '@mui/material/ListItem';\nimport List from '@mui/material/List';\nimport Divider from '@mui/material/Divider';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport IconButton from '@mui/material/IconButton';\nimport Typography from '@mui/material/Typography';\nimport CloseIcon from '@mui/icons-material/Close';\nimport Slide from '@mui/material/Slide';\nimport {addScheduledItem} from '../redux/reducers/appReducer';\nimport { Scheduler } from \"@aldabil/react-scheduler\";\nimport {  useDispatch, useSelector } from 'react-redux'\nimport useMediaQuery from '@mui/material/useMediaQuery';\nimport { useTheme } from '@mui/styles';\n\nimport Accordion from '@mui/material/Accordion';\nimport AccordionSummary from '@mui/material/AccordionSummary';\nimport AccordionDetails from '@mui/material/AccordionDetails';\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\n\n/**\n* @param {string} displayAs : 'Button' || 'Accordion'\n*/\nexport default function FullScreenAgendaDialog({displayAs, onConfirm}) {\n const scheduledItems = useSelector((state)=>state?.availability);\n const state = useSelector((state)=>state);\n const dispatch = useDispatch();\n const [open, setOpen] = React.useState(false);\n  const [selectedDateTime, setSelectedDateTime] = React.useState('');\n const theme = useTheme();\n  const fullScreen = useMediaQuery(theme?.breakpoints?.down('md'));\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n          \n  const handleConfirm = async (event, action) => {\n    const stampedEvent = { ...event,\n          event_id: event.event_id || Math.random(),\n        }\n    const finalEvent =  {target:{name:'appointmentDateTime',value:stampedEvent } };\n   \n       console.log(stampedEvent,'****************',typeof stampedEvent.start.toUTCString())\n    setSelectedDateTime(stampedEvent.start.toUTCString());\n       if(onConfirm)\n        onConfirm(finalEvent);\n    \n    /**\n     * Make sure to return 4 mandatory fields:\n     * event_id: string|number\n     * title: string\n     * start: Date|string\n     * end: Date|string\n     * ....extra other fields depend on your custom fields/editor properties\n     */\n    // Simulate http request: return added/edited event\n    return new Promise((res, rej) => {\n      setTimeout(() => {\n        stampedEvent.temporary = true;\n        res(stampedEvent);\n      }, 1000);\n    });\n  };\n\n\n\nconst AccordionView = ({children,selectedDate})=>{ \n\n\n  React.useEffect(() => {\n    console.log('cew selectedDate? ',selectedDate)\n\n  },[selectedDate ]);\n\n  return (<Accordion>\n        <AccordionSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1a-content\"\n          id=\"panel1a-header\"\n        >\n          <Typography>View Availability {selectedDate}</Typography> \n        </AccordionSummary>\n        <AccordionDetails>\n        {children}\n        </AccordionDetails>\n      </Accordion>);\n\n}\n\n const AppScheduler = ()=><Scheduler\n  view=\"month\"\n  month={{\nweekDays: [0, 1, 2, 3, 4, 5,6], \nweekStartOn: 1, \nstartHour: 9, \nendHour: 21,\n}}\n week={{ \nweekDays: [0, 1, 2, 3, 4, 5,6], \nweekStartOn: 6, \nstartHour: 9, \nendHour: 21,\nstep: 60\n }}\nday={{\n  \nstartHour: 9, \nendHour: 21, \nstep: 60\n }}\ndialogMaxWidth=\"sm\"\n  onConfirm={handleConfirm}\n  events={scheduledItems?.map((item)=>item)}\n/>     \n\n console.log(Object.keys(scheduledItems),'massages=>',typeof scheduledItems,typeof scheduledItems[0]);\n  return (\n    displayAs==='Accordion'?(<AccordionView selectedDate={selectedDateTime}><AppScheduler/></AccordionView>) :(<AppScheduler onClick={(event)=>console.log('schedulue cal event lick::', event)}/>)\n\n  );\n}","import * as React from 'react';\nimport ApplicationBar from '../navigation/ApplicationBar.js'\n//import GeneralInfo from './GeneralInfo';\n//import Reservations from './checkout/Reservations';\nimport { Outlet} from 'react-router-dom';\nimport Footer from '../navigation/Footer'\n//import Agenda from '../calendars/agenda.js'\n//const banner = '../images/sideview_closeddoors.jpeg';\n\n//const driverImg = 'https://application-0-iyetn.mongodbstitch.com/assets/driver1.jpeg';\n//await app.currentUser.refreshCustomData();\nimport PropTypes from 'prop-types';\nimport AppBar from '@mui/material/AppBar';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport useScrollTrigger from '@mui/material/useScrollTrigger';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\n\nimport Container from '@mui/material/Container';\nimport Slide from '@mui/material/Slide';\nimport FullScreenAgendaDialog from '../calendars/fullScreenAgendaDialog.js'\nimport {useNavigate} from \"react-router-dom\";\nimport Grid from '@mui/material/Grid';\nimport Fade from '@mui/material/Fade';\nimport {APPBAR_INITIAL_COLOR, APPBAR_INITIAL_HEIGHT} from '../constants.js'\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\n\n/**\n *  <Box\n    class=\"candles\"\n    style={{\n      opacity: 0.8,\n    backgroundImage: `url(${url})`,\n    backgroundSize: \"cover\",\n    height: \"100vh\",\n    color: \"#f5f5f5\"\n}}/>\n *  @description The Base component for the application without Providers\n */\n function MainComponent ({companyTitle, bannerURL}) {\nconst trigger = useScrollTrigger();\nconst navigate = useNavigate();\n\n  return(<Container>\n\n<Slide appear={false} direction=\"down\" in={!trigger}>\n\n    <Box sx={{height:APPBAR_INITIAL_HEIGHT}}>\n       <ApplicationBar sx={{borderRadius:5}}  barColor={APPBAR_INITIAL_COLOR} companyTitle={companyTitle}/>\n   </Box>\n    </Slide>\n\n    <Outlet /> \n\n <Box>\n    <Footer/>\n    </Box>  </Container>\n  );\n}\nexport default MainComponent;\n","import  React , {useState} from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\n\nimport AdminDrawerMenu from './AdminMenu';\n\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\n\nimport {  isAdminSelector,CONTACTINFO} from '../constants';\n\nconst selectContactData = state => state?.siteData?.contactData;\n\n/**\n * @description  Display Contact Info\n */\nfunction ContactCard(props) {\n  const navigate = useNavigate();\n    const app = null;\n    const componentData =CONTACTINFO;\nconst [displayData, setDisplayData] = useState(componentData);\n   const [edit, setEditMode] = useState(false);\n  const [editable] = useState(isAdminSelector);\n const [drawerState, setDrawerState] = React.useState(false);\n\n\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n//console.log(app,'----',editable,\"editable\",app?.profile?.email);\n  //const displayData = props.cardData? props.cardData :app?.siteData?.cardData;\n//setDisplayData(app?.siteData?.cardData)\n //console.log(title,'  +==============++',app?.siteData?.pageData?.title);\n // });  \n\n\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n      const obj = {cardData:app?.siteData?.cardData,pageData:app?.siteData?.pageData, contactData:displayData };\n      await app?.editHomeData(obj)\n\n    } catch (err) {\n     console.log('CONTACT err',err);\n  }\n}\n\n  return (\n    <React.Fragment>\n\n              <Card sx={{margin:'auto',minWidth: 270,width:1/3}}>\n                <CardHeader\n                  title={componentData?.title}\n                  subheader={componentData?.subheader}\n                  titleTypographyProps={{ align: 'center' }}\n                  action={componentData?.title === 'Pro' ? <StarIcon /> : null}\n                  subheaderTypographyProps={{\n                    align: 'center',\n                  }}\n                  sx={{\n                    backgroundColor: (theme) =>\n                      theme.palette.mode === 'light'\n                        ? theme.palette.grey[200]\n                        : theme.palette.grey[700],\n                  }}\n                />\n                <CardContent>\n                  \n                  <ul>\n                    { componentData?.description.map((line,descriptionIndex) => (\n                      <Typography\n                        component=\"li\"\n                       \n                        align=\"center\"\n                        key={descriptionIndex+line}\n                      >\n                  {line}\n                  \n                      </Typography>\n                    ))}\n                  </ul>\n                </CardContent>\n        \n              </Card>\n   \n     \n    </React.Fragment>\n  );\n}\n\n/**  @module ContactCard */\nexport default ContactCard;\n","import  React , {useState} from 'react';\n\nimport { useSelector } from 'react-redux'\n//import Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport Box from '@mui/material/Box';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\n\n//import CardContent from '@mui/material/CardContent';\n//import CardHeader from '@mui/material/CardHeader';\nimport CssBaseline from '@mui/material/CssBaseline';\n//import Grid from '@mui/material/Grid';\n//import StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport AdminDrawerMenu from './AdminMenu';\nimport Input from '@mui/material/Input';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\nimport { useNavigate} from \"react-router-dom\";\nimport InfoCards from './InfoCards'\nimport ContactCard from './ContactCard'\n//import { useRealmApp } from \"../RealmApp\";\n//import { useLocation } from 'react-router-dom';\n\nimport {  isAdminSelector} from '../constants';\n//import { createBrowserHistory } from 'history';\nconst selectSiteData = state => state?.siteData?.pageData;\n//const selectAuthedUserDataState = state => state?.app?.currentUser?.customData;\n/**\n * @description General Info, is the home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nfunction GeneralInfo({siteData}) {\n\n//const location = useLocation();\nconst getSiteData = useSelector(selectSiteData)\nconst getIsAdmin = useSelector(isAdminSelector)\n  const app  = {};\n  app.siteData = getSiteData;\n  const navigate = useNavigate();\n  const [edit, setEditMode] = useState(false);\n  const [editable, setEditableMode] = useState(getIsAdmin);\n\n  //const [error, setError] = useState();\n  const [title, setTitle] = useState(getSiteData?.title);\n  const [reservationButton, setReservationButton] = useState(app?.siteData?.pageData?.reservationButton);\n  const [subtitle, setSubTitle] = useState(getSiteData?.subtitle);\n  const [paragraph1, setParagraph1] = useState(getSiteData?.paragraphs[0]);\n  const [paragraph2, setParagraph2] = useState(getSiteData?.paragraphs[1]);\n  const [drawerState, setDrawerState] = React.useState(false);\n //   const authedUserSelector = useSelector(selectAuthedUserDataState);\n // const [authedUser, setAuthedUser] = useState(authedUserSelector?.email!==undefined);\n\n\n   React.useEffect(() => {\n    setEditableMode(getIsAdmin);\n  },[getIsAdmin, getSiteData]);  \n  \n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    setDrawerState(!drawerState);\n  };\n\n\n\n/**\n * Admin method which allows Admin to edit or save text changes\n */\n  const handleSave = async (event) => {\n    // eslint-disable-next-line no-console\n    \n      try {   \n       const obj = {title, subtitle, reservationButton,paragraphs: [paragraph1, paragraph2]};\n       const cardData = {pageData:obj,cardData:app?.siteData?.cardData };\n       app?.editHomeData(cardData);\n\n    } catch (err) {\n     console.log(err)\n  }\n}\n\n\n\n  return (\n    <React.Fragment>\n      <GlobalStyles styles={{ ul: { margin: 0, padding: 0, listStyle: 'none' } }} />\n      <CssBaseline />\n      <Container disableGutters maxWidth=\"sm\" component=\"main\" sx={{ pt: 8, pb: 6 }}>\n{AdminDrawerMenu(toggleDrawer,handleSave, drawerState,editable,setEditMode, edit)}\n\n          {edit  ? <Box> <label>Replace title with::</label><Input   id=\"subTitle-replacement\"\n                  label=\"Replacetitle\"\n                  name=\"Replacetitle\"\n                  onChange={(event)=>{console.log(event.target.value); setTitle(event.target.value)}}\n\n                  value={title}\n                  placeholder='Enter Title text'\n                /></Box>\n         :<Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"text.primary\" gutterBottom>\n          {title} </Typography>}\n          {edit ? <Box> <label>Replace Subtitle With::</label><Input   id=\"subTitle-replacement\"\n                  label=\"ReplaceSubtitle\"\n                  name=\"ReplaceSubtitle\"\n                  onChange={(event)=>setSubTitle(event.target.value)}\n                  value={subtitle}\n                  placeholder='Enter Button Text'\n                /></Box>:\n        <Typography variant=\"h5\" align=\"center\" color=\"text.secondary\" component=\"p\">\n          {subtitle}</Typography>}\n        \n        <Box>{edit && <label>Replace 1st Paragraph Text::</label>}\n        <Typography onChange={(event)=>setParagraph1(event.target.value)}  component={edit ? \"textarea\" :'div'}>{paragraph1}</Typography>\n        </Box>\n         <Box>{edit && <label>Paragraph 2 Replacement Text::</label>} <Typography onChange={(event)=>setParagraph2(event.target.value)}\n component={edit ? \"textarea\" :'div'}   >{paragraph2}</Typography>\n         </Box>\n         <Typography>  </Typography>\n          <Typography>  </Typography>\n          {edit ? <Box>\n        <label>Replace ButtonText::</label>\n         <Input   id=\"makeReservation\"\n                  label=\"Make Reservation\"\n                  onChange={(event)=>setReservationButton(event.target.value)}\n                  name=\"makeReservation\"\n                  value={reservationButton}\n                  placeholder='Enter Button Text'\n                /></Box>: <Button variant='outlined' fullWidth size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{reservationButton}<AirportShuttleIcon/></Button>}\n          \n         <Typography> </Typography>\n         <Typography> </Typography>\n          <InfoCards /> \n          <ContactCard />       \n      </Container>\n       \n    </React.Fragment>\n  );\n}\n\nexport default GeneralInfo;\n","import React from 'react';\nimport { useNavigate} from \"react-router-dom\";\nimport { useSelector } from 'react-redux'\n\nimport Container from '@mui/material/Container';\nimport Table from '@mui/material/Table';\nimport Button from '@mui/material/Button';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport Typography from '@mui/material/Typography';\nimport Toolbar from '@mui/material/Toolbar';\nimport Divider from '@mui/material/Divider';\n//import {fetchReservations} from '../redux/reducers/appReducer'\n\n\n\n/**\n *  View a history of Reservations\n * Sample:\n * const reservation = {\n * userid:\"6182198ee43796e8d32aff28\",\n * pickUpDate:\"12:12:10\",\n * pickUpTime:\"02:03:04\"\n * destination:\"destinationf\"\n * firstName:\"A\",\n * lastName:\"Z\",\n * email:\"az@email\",\n * createdDated:'12:11:12',\n * phone:\"555-555-5555\"};\n *\n */\n\nfunction Reservations({bgColor}) {\n  const getReservations = useSelector(state=>state?.reservations);\n  const navigate = useNavigate();\n\n   const loginSuccessful = useSelector((state)=>state.profile);\n\n     React.useEffect(() => {\n        if(!loginSuccessful)\n          {console.log('An attempt to view Reservations from an Unauthorized User has been flagged; so, forcing home redirect.');  navigate('/');}  \n      },[loginSuccessful, navigate]);\n\n  //const adjustDate = (someDate)=>(someDate && ((typeof someDate) === 'object' )? someDate.toDateString() : someDate);\n \n  return (\n    <React.Fragment>\n    <Container sx={{backgroundColor: bgColor}}>\n   <Toolbar>\n\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n             { getReservations?.length} Reservations \n          </Typography>\n        </Toolbar>\n   \n  \n      <Table size=\"small\">\n        <TableHead>\n          <TableRow>\n            <TableCell aria-label='createdColumn'>Created On</TableCell>\n            <TableCell>Contact</TableCell>\n            <TableCell>Location</TableCell>\n            </TableRow>\n        </TableHead>\n        <TableBody>\n          {getReservations.map((reservation, index) => \n            (<TableRow key={index}>\n              <TableCell>{new Date(reservation?.createdDate?.toString()).toLocaleString()}</TableCell>\n              <TableCell><span aria-label='wholename'>{reservation?.firstName}{' '}{reservation?.lastName}</span>\n              <Divider/><span aria-label='email'>{reservation?.email}</span><p aria-label='phone'>{reservation?.phone}</p></TableCell>\n              <TableCell><span aria-label='pickupLocation'>{reservation?.pickupLocation}</span><p >{new Date( reservation?.pickUpDate).toLocaleString()}</p></TableCell>\n            </TableRow>)\n          )}\n          <TableRow >\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n              <TableCell></TableCell>\n            </TableRow>\n        </TableBody>\n      </Table>\n           <Button variant='outlined'  size=\"large\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>\n        Make Another Reservation\n      </Button>\n      </Container>\n\n \n    </React.Fragment>\n  );\n}\n\nexport default Reservations;\n","import  * as React from 'react';\nimport { useSelector } from 'react-redux'\nimport FullScreenAgendaDialog from '../calendars/fullScreenAgendaDialog.js'\n\nimport Grid from '@mui/material/Grid';\nimport Typography from '@mui/material/Typography';\nimport Input from '@mui/material/Input';\nimport TextField from '@mui/material/TextField';\nimport {PickUpDateAriaLabel,PickUpLocationAriaLabel,DropOffDateAriaLabel,DropOffLocationAriaLabel,\nFirstNameAriaLabel,LastNameAriaLabel,EmailAriaLabel,PasswordAriaLabel,PhoneAriaLabel}  from '../constants'\nimport LocationSelect from './locationSelect.js';\nimport CreatableSelect from 'react-select/creatable';\nimport {  OnChangeValue } from 'react-select';\n/**\n *  Display itinerary specific field for user input\n */\n function SetAppointmentFragment({onChange}) {\n\n const [selectedLocation, setSelectedLocation] = React.useState('');\n\n  const currentUser = useSelector((state)=>state.profile);\n\nconst isPasswdNeeded = (currentUser?.email==null);\nconst locations = [{label:'Alchemeia Center', value:'262 E Pastime rd, Tucson Az,'},\n                    {label:'ASIS Massage', value:'000 4th St, Tucson AZ'}];\n\n\n  return (\n    <React.Fragment>\n    <FullScreenAgendaDialog onConfirm={onChange} displayAs={'Accordion'}/>\n      <Typography variant=\"h6\" sx={{marginBottom:3, marginTop:3}} >\n        Appointment Location\n      </Typography>\n        <h6>{selectedLocation}</h6>\n        <CreatableSelect name='locationSelect' isClearable onChange={(event)=>{ const newArg={target:{name:'locationSelect', value:event.value} }; setSelectedLocation(event.value) ; onChange(newArg);}} options={locations}/>\n      \n      <Typography variant=\"h6\" sx={{marginBottom:3, marginTop:3}} >\n        Contact Info\n      </Typography>\n\n      <Grid container spacing={3}>\n     <Grid item xs={12} sm={6}>\n   \n          <TextField\n                \n                  name=\"firstName\"\n                 placeholder='First Name'\nonChange = {onChange}\n                  \n                  id=\"firstName\"\n                  inputProps={FirstNameAriaLabel}\n                  defaultValue={currentUser?.firstname}\n                />\n              </Grid>\n        <Grid item xs={12} sm={6}>\n                <TextField\n                  \n                  id=\"lastName\"\n                  name=\"lastName\"\n                  inputProps={LastNameAriaLabel}\n                  placeholder='Last Name'\n                  onChange = {onChange}\n                  defaultValue={currentUser?.lastname}\n                />\n              </Grid>\n       <Grid item xs={12} sm={6}>\n                <Input\n                  name=\"email\"\n                  onChange = {onChange}\n                 placeholder='email'\n                  defaultValue={currentUser?.email}\n                  inputProps={EmailAriaLabel}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email\"\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <Input\n                onChange = {onChange}\n                  fullWidth\n                  id=\"phone\"\n                  label=\"Phone\"\n                  name=\"phone\"\n                  inputProps={PhoneAriaLabel}\n                  defaultValue={currentUser?.phone}\n\n                  placeholder='Contact #'\n                />\n              </Grid>\n\n {isPasswdNeeded && <Grid item xs={12}>\n                 <Grid item xs={6} sm={6}>\n                 <TextField \n              margin=\"normal\"\n              required\n              fullWidth\n              onChange = {onChange}\n              name=\"password\"\n              label=\"Password\"\n              inputProps={PasswordAriaLabel}\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n              </Grid>\n        </Grid>  }\n\n      </Grid>\n    </React.Fragment>\n  );\n}\n\nexport default SetAppointmentFragment;\n","import * as React from 'react';\nimport Typography from '@mui/material/Typography';\nimport Grid from '@mui/material/Grid';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport TextareaAutosize from '@mui/material/TextareaAutosize';\nimport {AgreementCheckboxAriaLabel, AgreementAriaLabel, AgreementSignatureAriaLabel} from '../constants.js'\nconst Agreements = \"As a Business person, I take pride and dignity in my vehicles and service.  The vehicle is thoroughly cleaned inside and out because I value your image and health.\\n\\nPlease check the vehicle principle guidleins thoroughly with the agent at the lot before taking the vehicle./n/nSmoking of any kind is prohibited in the vehicle.  You will be financially responsible for any physical damage or smoking damage.  Please treat this vehicle as your own vehicle.\\n\\nPlease be aware there is a camera within this vehicle.  8 Angels monitors all their vehicles through tracking devices and cameras during the customer's reservation.  Again please follow the vehicle guidelines and enjoy your rental.\"\n\n\n/**\n * \n * \n */\nexport default function PaymentForm(props) {\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>Customer Agreements</Typography>\n      <TextareaAutosize\n  aria-label={AgreementAriaLabel['aria-label']}\n  minRows={3}\n  placeholder=\"Minimum 3 rows\"\n  style={{ width: 400 }}\n  value={Agreements}\n/>\n      <Grid container spacing={3}>\n              <Grid item xs={12}>\n          <FormControlLabel\n            control={<Checkbox inputProps={AgreementCheckboxAriaLabel} onChange={props.onChange} color=\"secondary\" name='agreementChecked' />}\n            label=\"Please check if you agree to the terms above\"\n          />\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <TextField\n           inputProps={AgreementSignatureAriaLabel}\n          name=\"agreementSignature\"\n            required\n            id=\"cardName\"\n            label=\"Enter your name if you agree\"\n            fullWidth\n            onChange={props.onChange}\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n            \n\n          />\n        </Grid>\n        \n\n      </Grid>\n    </React.Fragment>\n  );\n}\n","import * as React from 'react';\n\nimport  {SquarePaymentsForm,  CreditCardInput} from 'react-square-web-payments-sdk';\n\n \n/**\n * import  {SquarePaymentsForm,CreditCardInput,} from 'react-square-web-payments-sdk';\n * \n * For the moment, use an npm module to handle Square Access, because of the pre-made \n * Form,Validation, Submission\n * \n */\nconst SquarePaymentForm = ({handleSuccess}) => (\n  <SquarePaymentsForm\n    /**\n     * Identifies the calling form with a verified application ID\n     * generated from the Square Application Dashboard.\n     */\n    applicationId={process.env.REACT_APP_SQUARE_APPID}\n    /**\n     * Invoked when payment form receives the result of a tokenize generation request.\n     * The result will be a valid credit card or wallet token, or an error.\n     */\n    cardTokenizeResponseReceived={(token, buyer) =>  handleSuccess(token, buyer) }\n    \n    /**\n     * This function enable the Strong Customer Authentication (SCA) flow\n     *\n     * We strongly recommend use this function to verify the buyer and\n     * reduce the chance of fraudulent transactions.\n     */\n    createVerificationDetails={() => ({\n      amount: '1.00',\n      /* collected from the buyer */\n      billingContact: {\n        addressLines: ['123 Main Street', 'Apartment 1'],\n        familyName: 'Doe',\n        givenName: 'John',\n        countryCode: 'US',\n        city: 'London',\n      },\n      currencyCode: 'USD',\n      intent: 'CHARGE',\n    })}\n    /**\n     * Identifies the location of the merchant that is taking the payment.\n     * Obtained from the Square Application Dashboard - Locations tab.\n     */\n    locationId={process.env.REACT_APP_SQUARE_LOCATIONID}\n  >\n    <CreditCardInput />\n  </SquarePaymentsForm>\n);\n\nexport default SquarePaymentForm\n","import * as React from 'react';\n\n//import { ApiError, Client, Environment,square } from 'square'\nimport Typography from '@mui/material/Typography';\nimport List from '@mui/material/List';\nimport ListItem from '@mui/material/ListItem';\nimport ListItemText from '@mui/material/ListItemText';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Divider from '@mui/material/Divider';\nimport { FEE_FORMULA, NameOnCardAriaLabel } from '../constants';\nimport TextField from '@mui/material/TextField';\nimport SquarePaymentForm from './squarePayComponent.js';\n/**\n* Review component is the final stage of the Reservation process where the user can\n* view the details of the desired reservation  and finalize with payment\n*\n* @param props : \n*     props.reservation   - expects a Reservation javascript object {} used to fill component data\n*     props.handleSuccess - expects a callback upon succesful submission of credit card info \n*/\nfunction ReviewFragment(props) {\n\n  return (\n    <React.Fragment>\n      <Typography variant=\"h6\" gutterBottom>\n        Order summary\n      </Typography>\n      <List disablePadding>\n        {FEE_FORMULA.map((product) => (\n          <ListItem key={product.name} sx={{ py: 1, px: 0 }}>\n            <ListItemText primary={product.name} secondary={product.desc} />\n            <Typography variant=\"body2\">{product.price}</Typography>\n          </ListItem>\n        ))}\n\n        <ListItem sx={{ py: 1, px: 0 }}>\n          <ListItemText primary=\"Total\" />\n          <Typography variant=\"subtitle1\" sx={{ fontWeight: 700 }}>\n            $34.06\n          </Typography>\n        </ListItem>\n      </List>\n\n      <Grid container spacing={1}>\n        <Grid item xs={12} sm={10}>\n          <Box sx={{\n    paddingBottom: 2,\n    paddingTop: 2,\n    marginInline: 'auto',\n    borderBlock: 'groove'}} >\n          <Typography variant=\"h5\" gutterBottom >\n            Itinerary\n          </Typography>\n          <Typography gutterBottom>{'Contact : '}{props.reservation.firstName} {props.reservation.lastName}</Typography>\n          <Typography gutterBottom>{'Pick-up : '}{props.reservation.pickupLocation}{new Date(props.reservation.pickupDate).toLocaleString()}</Typography>\n          <Typography gutterBottom>{'Drop-off : '}{props.reservation.dropOffLocation}{new Date(props.reservation.dropOffDate).toLocaleString()}</Typography>                    \n          </Box>\n        </Grid>\n      </Grid>\n\n       <Typography variant=\"h5\" gutterBottom sx={{marginTop:3}}>\n        Secure Payment\n      </Typography>\n       <Grid item xs={12} md={6}>\n          <TextField\n          inputProps={NameOnCardAriaLabel}\n            required\n            id=\"cardName\"\n            label=\"Name on card\"\n            fullWidth\n            autoComplete=\"cc-name\"\n            variant=\"standard\"\n          />\n        </Grid>\n\n   <SquarePaymentForm data-testid=\"SquarePay\" handleSuccess={props.handleSuccess}/>\n    </React.Fragment>\n  );\n}\nexport default ReviewFragment;","import * as React from 'react';\nimport {  useDispatch, useSelector } from 'react-redux'\n//import { useRealmApp } from \"../RealmApp\";\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Box from '@mui/material/Box';\nimport Container from '@mui/material/Container';\nimport Paper from '@mui/material/Paper';\nimport Stepper from '@mui/material/Stepper';\nimport Step from '@mui/material/Step';\nimport StepLabel from '@mui/material/StepLabel';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport SetAppointmentFragment from './setAppointmentFragment';\nimport AssignmentIcon from '@mui/icons-material/Assignment';\n\nimport AgreementForm from './AgreementForm';\nimport ReviewFragment from './Review';\nimport {useNavigate} from \"react-router-dom\";\nimport validator from 'validator';\nimport { register,addScheduledItem, insertReservation,creditPaymenError ,creditPaymentSuccess} from '../redux/reducers/appReducer';\nconst steps = ['Itinerary', 'Agreements', 'Review'];\n\n\nconst theme = createTheme();\n\n/**\n *  Module to take reservations from user. \n */\n function Checkout({bgColor}) {\n  const currentUser = useSelector((state)=>state?.profile);\n//  const hasProfile = useSelector((state)=>state?.profile);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const [firstName, setFirstName] = React.useState(currentUser?.firstname||'');\n  const [lastName, setLastName] = React.useState(currentUser?.lastname||'');\n  const [email, setEmail] = React.useState(currentUser?.email||'');\n  const [password, setPassword] = React.useState();\n  const [error, setError] = React.useState();\n  const [phone, setPhone] = React.useState(currentUser?.phone||'');\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [pickUpDate, setPickUpDate] = React.useState(new Date());\n  const [dropOffDate, setDropoffDate] = React.useState(new Date());\n  const [dropOffLocation, setDropoffLocation] = React.useState('');\n  const [pickupLocation, setPickupLocation] = React.useState('');\n  //const [itineraryValid, setItineraryValid] = React.useState(false);\n\n  const [agreementSignature, setAgreementSignature] = React.useState('');\n  const [agreementChecked, setAgreementChecked] =React.useState(false);\n\n  const [paymentSucceeded, setPaymentSucceeded] = React.useState(false);\n  const [scheduledItem,setScheduledItem] = React.useState();\n\n  React.useEffect(() => {\n //console.log(`firstNameState = ${firstName}--,`,currentUser);\n    setFirstName(currentUser?.firstname);\n  },[currentUser/*,lastName,email,phone*/]);\n\n\n   function itineraryValidated  (currentStep){\n    let validated = false;\n    if(currentStep===0){\n         const phoneValidated = phone && validator.isMobilePhone(phone);\n         const emailValidated = email && validator.isEmail(email);\n         const pickupLocationValidated =  !validator.isEmpty(pickupLocation);\n         const dropOffLocationValidated = true;// !validator.isEmpty(dropOffLocation);\n         const firstNameValidated = firstName && !validator.isEmpty(firstName) ;\n         const lastNameValidated =  lastName && !validator.isEmpty(lastName);\n           validated = (phoneValidated && emailValidated && pickupLocationValidated && dropOffLocationValidated && firstNameValidated && lastNameValidated);\n          console.log(`phone=${phone}, email(${email}),  pickupDate(${pickUpDate}),pickupLocation(${pickupLocation}),dropOffLocationValidated, firstNameValidated(${firstNameValidated}), firstName(${firstName}), lastNameValidated(${lastNameValidated}/ ${lastName})`);\n      }else\n         if(currentStep===1){\n          const agreementSignatureValidated = !validator.isEmpty(agreementSignature);\n          validated = agreementSignatureValidated && agreementChecked;\n         }\n         else \n          if(currentStep===2) {\n            //if we made it this far everything has been validated\n            validated = paymentSucceeded;\n          }\n\n      return validated;\n}\n\nfunction getStepContent(step) {\n  const tmpRes = {\n                    userid:'realmApp?.currentUser?.id',\n                   pickUpDate:pickUpDate,\n                    dropOffDate:dropOffDate,\n                   dropOffLocation:dropOffLocation,\n                   pickupLocation:pickupLocation,\n                   firstName:firstName,\n                    lastName:lastName,\n                      email:email,\n                      createdDate:new Date(),\n                      phone:phone}; \n\nconsole.log(tmpRes);\n  switch (step) {\n    case 0:\n    console.log(\"checkout.getStepContent before ItineraryFragment-->\",firstName,lastName,email,phone);\n      return <SetAppointmentFragment  onChange={(event)=>onChange(event)}/>;\n    case 1:\n      return <AgreementForm onChange={onChange} />;\n    case 2:\n      return <ReviewFragment handleSuccess={(successEvent)=> \n                                        {\n                                          if(successEvent.status==='OK'){\n                                            dispatch(creditPaymentSuccess())\n                                          setPaymentSucceeded(true); \n                                        dispatch(insertReservation(tmpRes)); \n                                        dispatch(addScheduledItem(scheduledItem))\n                                         setActiveStep(activeStep + 1);\n                                       }else{console.log(\"Credit Error::=>\",successEvent.errors);\n                                              dispatch(creditPaymenError('Payment Error',successEvent.toString()))}\n                                      }}\n                      reservation={tmpRes}\n            />;\n    default:\n      throw new Error('Unknown step');\n  }\n}\n\n\n const onChange = (event) =>{\n  console.log(event)\n    console.log(event.target.name,'---',event.target.value);\n     \n    switch (event.target.name) {\n  case 'appointmentDateTime':setScheduledItem(event.target.value);\n                            setPickUpDate(event.target.value.start); break;\n  case 'locationSelect':setPickupLocation(event.target.value); break;\n  case 'agreementSignature':setAgreementSignature(event.target.value); break;\n  case 'agreementChecked' : setAgreementChecked(event.target.checked); break;\n  case 'email':setEmail(event.target.value);break;\n  case 'password':setPassword(event.target.value);break;\n  case 'phone':setPhone(event.target.value);break;\n\n  case 'firstName':setFirstName(event.target.value);break;\n  case 'lastName':setLastName(event.target.value);break;\n  case 'pickupdate':setPickUpDate(event.target.value);break;\n  case 'dropoffDate': setDropoffDate(event.target.value); break;\n  case 'dropoffLocation': setDropoffLocation(event.target.value); break;\n  case 'pickupLocation': setPickupLocation(event.target.value); break;\n  default:\n    console.log(`Sorry, we are out of ${event.target.name}.`);\n\n  }\n}\n  const handleConfirm = async (event, action) => {\n    const stampedEvent = { ...event,\n          event_id: event.event_id || Math.random()\n        }\n    console.log(event, action);\n    if (action === \"edit\") {\n      /** PUT event to remote DB */\n      console.log('edit');\n    } else if (action === \"create\") {\n      /**POST event to remote DB */\n     // dispatch(addScheduledItem(stampedEvent))\n      console.log(stampedEvent.start,'create', typeof stampedEvent.start)\n    }\n}\n\n  const handleNext = async (event) => {\n          let canContinue = false;\n    if(activeStep === steps.length - 1){\n        //  const data = new FormData(event.currentTarget);\n       \n    }\n    else if (activeStep === 0){\n        //if(fullyValidated){\n          if(password ){\n          //register with the email and password\n              try{\n             const {error} =  dispatch(register({email, password, firstName,lastName, phone})) ;\n             console.log('result....',error);\n             //canContinue = success  ;\n             if(error)\n             setError(error);\n           else canContinue=true;\n            // console.log(success,'========',error )\n            }catch(err){\n        console.log('Error attempting to register user',err);\n            }\n          \n          }//if passwd\n    else { canContinue=true;}\nif (canContinue) {setActiveStep(activeStep + 1); setError(null)}\n\n   }//if(activestep ===0)\nelse if(activeStep ===1){\nsetError(null);\n  setActiveStep(activeStep + 1);\n\n}\n  }//handlenext();\n\n  const handleBack = () => {\n    setActiveStep(activeStep - 1);\n    setError(null);\n\n  };\n\n  return (\n  \n\n      <Container component=\"main\" maxWidth=\"sm\" sx={{ mb: 4 , backgroundColor: bgColor}}>\n        <Paper variant=\"outlined\" sx={{ my: { xs: 3, md: 6 }, p: { xs: 2, md: 3 } }}>\n          <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n            Checkout \n          </Typography>\n          <Stepper activeStep={activeStep} sx={{ pt: 3, pb: 5 }}>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n\n          <React.Fragment>\n            {activeStep === steps.length ? (\n              <React.Fragment>\n                <Typography variant=\"h5\" gutterBottom>\n                  Thank you for your order.\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  Your order number is #2001539. You will be contacted shortly by your driver to make introductions and finalize the registration.\n                </Typography>\n                <Button variant='outlined' sx={{ marginTop:'20px' }}  size=\"large\" onClick={()=>{ navigate('/reservations');}}><AssignmentIcon />View Reservations</Button>\n              </React.Fragment>\n            ) : (\n              <React.Fragment>\n                {getStepContent(activeStep)}\n                <Box sx={{ display: 'flex', justifyContent: 'flex-end' }}>\n                  {activeStep !== 0 && (\n                    <Button onClick={handleBack} sx={{ mt: 3, ml: 1 }}>\n                      Back\n                    </Button>\n                  )}\n\n                  <Button\n                  disabled={!itineraryValidated(activeStep)}\n                  aria-label='Next'\n                    variant=\"contained\"\n                    onClick={handleNext}\n                    sx={{ mt: 3, ml: 1 }}\n                  >\n                    {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\n                  </Button>\n                </Box>\n    <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}\n          </Typography>\n              </React.Fragment>\n            )}\n          </React.Fragment>\n        </Paper>\n      </Container>\n\n  );\n}\n\n/** \n *  @module Checkout \n *  @description Autonomous reserve and checkout w/payment modulue\n */\nexport default Checkout;\n","import * as React from 'react';\nimport {  useSelector, useDispatch } from 'react-redux'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\n//import Input from '@mui/material/Input';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {PhoneAriaLabel, FirstNameAriaLabel, LastNameAriaLabel, EmailAriaLabel} from '../constants'\nimport validator from 'validator';\nimport { useNavigate} from \"react-router-dom\";\nimport  {editProfile} from '../redux/reducers/appReducer'\n\n\nconst theme = createTheme();\n\n/**\n * Profile : Displays User specific and saved info.\n *           Button disabled until all fields are validated\n */\nfunction Profile({bgColor}) {\n    const navigate = useNavigate();\n    const profile = useSelector((state)=>state?.profile);\n    const loggedInUser = useSelector((state)=>state?.profile?.email);\n  const  dispatch = useDispatch();\n\n const [firstName, setFirstName] = React.useState(profile?.firstname||'');\n  const [lastName, setLastName] = React.useState(profile?.lastname||'');\n  const [email, setEmail] = React.useState(profile?.email||'');\n  const [phone, setPhone] = React.useState(profile?.phone||'');\n\n  const [isEmailValid, setIsEmailValid] = React.useState(validator.isEmail(email));\n  const [isPhoneValid, setIsPhoneValid] = React.useState(validator.isEmail(email));\n  const [isLastNameValid, setIsLastNameValid] = React.useState(!validator.isEmpty(lastName));\n  const [isFirstNameValid, setIsFirstNameValid] = React.useState(!validator.isEmpty(firstName));\n  const [error, setError] = React.useState('');\n\n  React.useEffect(() => {\n    if(!loggedInUser) {console.log('User with no Profile logged in; so, forcing home redirect.'); navigate(\"/\");}\n  },[loggedInUser,navigate/*,firstName,lastName,email,phone*/]);\n\n\n/**\n *  Validate all fields\n */\nfunction componentValidated  (){\n\n    const validated = (isPhoneValid && isEmailValid  && isFirstNameValid && isLastNameValid);\n\n    return validated;\n}\n\n\n  /**\n   * \n   */\n  const handleSubmit = async (event) => {\nevent.preventDefault();\nif(componentValidated())  dispatch(editProfile({firstname:firstName, lastname:lastName, email:email, phone:phone}));\nelse{setError('Unable to continue, found invalid fields')}\n  };\n\n  return (\n\n      <Container  sx={{backgroundColor: bgColor}} component=\"main\" maxWidth=\"xs\">\n      \n        <Box\n          sx={{\n            backgroundColor:bgColor,\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Profile\n          </Typography>\n       {error}\n          <Box component=\"form\" noValidate onSubmit={handleSubmit}   sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  name=\"firstName\"\n                  defaultValue={profile?.firstname}\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  inputProps={FirstNameAriaLabel}\n                      onChange={(event)=>{\n                         const validFirstName = !validator.isEmpty(event.target.value);\n                        if(validFirstName){\n                        setFirstName(event.target.value);\n                        setIsFirstNameValid(validFirstName);\n                        setError();\n                        } else setError('Invalid or missing First Name');\n                      }\n                  }\n\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  name=\"lastName\"\n                  defaultValue={profile.lastname}\n                  inputProps={LastNameAriaLabel}\n                  placeholder='Last Name'\n                  onChange={(event)=>{\n                    const validLastName = !validator.isEmpty(event.target.value);\n                        if(validLastName){\n                        setLastName(event.target.value);\n                        setIsLastNameValid(validLastName);\n                        setError('');\n                        } else setError('Invalid or missing Last Name');\n                      }\n                  }\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  defaultValue={profile.email}\n                  fullWidth\n                  id=\"email\"\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                  inputProps={EmailAriaLabel}\n                  onChange={(event)=>{\n                    const validEmail = !validator.isEmpty(event.target.value);\n                        if(validEmail){\n                        setEmail(event.target.value);\n                        setIsEmailValid(validEmail);\n                        setError('');\n                        } else setError('Invalid or missing Email');\n                      }\n                  }                    \n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField \n                  defaultValue={profile.phone}\n                  fullWidth\n                  name=\"phone\"\n                  label=\"phone\"\n                  inputProps={PhoneAriaLabel}\n                  type=\"phone\"\n                  id=\"phone\"\n                  onChange={(event)=>{\n                    const validPhone = !validator.isEmpty(event.target.value);\n                        if(validPhone){\n                        setPhone(event.target.value);\n                        setIsPhoneValid(validPhone);\n                        setError('');\n                        } else setError('Invalid or missing Phone');\n                      }\n                  } \n                         />\n              </Grid>\n             \n            </Grid>\n            <Button\n             \n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n             \n            >\n              Cancel\n            </Button>\n            <Button\n            aria-label=\"SaveProfile\"\n              type=\"submit\"\n              fullWidth\n             \n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n              disabled={!componentValidated()}\n            >\n              Save\n            </Button>\n           \n          </Box>\n        </Box>\n      </Container>\n  );\n}\n\nexport default Profile;","import React from 'react';\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\nimport {useNavigate} from \"react-router-dom\";\nimport {  useSelector,useDispatch } from 'react-redux'\nimport { login} from '../redux/reducers/appReducer';\n\n\nconst theme = createTheme();\nconst PasswordAriaLabel = { 'aria-label': 'Password' };\nconst EmailAriaLabel = { 'aria-label': 'EmailAddress' };\n\n/**\n * @description Perform Sign-in when user Submits form by \n * 1. Reads the form data \n * 2. Attempts to signin with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * \n */\nfunction SignIn({bgColor}) {\n   const stateError = useSelector((state)=>state.error);\n   const loginSuccessful = useSelector((state)=>state?.profile?.email);\n //const  app = useRealmApp();\nconst navigate = useNavigate();\n  const [error, setErrorMsg] = React.useState('');\n      const dispatch = useDispatch(); //(action)=>(console.log(action));\n \n\n     React.useEffect(() => {\nif(loginSuccessful) {console.log('Already logged in; so, forcing home redirect.'); navigate('/'); }\n\n  });\n\n/**\n * Performs the Signin when user Submits form\n * \n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n    const credentials = {\n      email: data.get('email'),\n      password: data.get('password'),\n    }\ntry{     dispatch(login(credentials)); \n/*app.logIn(credentials);*/ }catch{ setErrorMsg('We are having difficulties logging you in.')} };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container  sx={{backgroundColor: bgColor}} component=\"main\" maxWidth=\"xs\" >\n        <CssBaseline />\n        <Box\n          sx={{\n           backgroundColor: bgColor,\n            marginTop: 8,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign in\n          </Typography>\n              <Typography component=\"span\" aria-label='Error'  align=\"center\" sx={{color:'red'}}>\n    {error}{stateError}\n          </Typography>\n          <Box component=\"form\" onSubmit={(event)=>handleSubmit(event)} noValidate sx={{ mt: 1 }}>\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label='Enter Your Email Address'\n              id=\"email\"\n              inputProps={EmailAriaLabel}\n              name=\"email\"\n              autoComplete=\"email\"\n              autoFocus\n            />\n            <TextField\n              margin=\"normal\"\n              required\n              fullWidth\n              label=\"Password\"\n              inputProps={PasswordAriaLabel}\n              name=\"password\"\n              type=\"password\"\n              id=\"password\"\n              autoComplete=\"current-password\"\n            />\n            <Button\n              aria-label=\"Submit\"\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign In\n            </Button>\n            <Grid container>\n              <Grid item xs>\n                <Button  href=\"#\" variant=\"body2\">\n                  Forgot password?\n                </Button>\n              </Grid>\n              <Grid item>\n                <Button onClick={()=>navigate('/signup')} variant=\"body2\">\n                  {\"Don't have an account? Sign Up\"}\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignIn;","import React from 'react';\nimport {useNavigate} from \"react-router-dom\";\nimport { useSelector,useDispatch } from 'react-redux'\n\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Checkbox from '@mui/material/Checkbox';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n//import validator from 'validator'\nimport {FirstNameAriaLabel, LastNameAriaLabel, EmailAriaLabel, PasswordAriaLabel} from '../constants'\nimport {register} from '../redux/reducers/appReducer';\n\nconst theme = createTheme();\n\n\n/**\n * @description SignUp: take basic info and use it to register a user and log in \n * \n * \n */\nfunction SignUp({bgColor}) {\n   const stateError = useSelector((state)=>state.error);\n    const profile = useSelector((state)=>state?.profile);\n\n  const [error, setErrorMsg] = React.useState('');\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n     React.useEffect(() => {\nif(profile) {console.log('Already logged in; so, forcing home redirect.');  navigate('/');}\n},[profile,navigate]);\n/**\n * Performs the registration when user Submits form by \n * 1. reads the form data \n * 2. Attempts to register with credentials{email, password}.\n * 3. Navigates home on success or displays any errors\n * \n * @param event: the submit event\n */\n  const handleSubmit = async (event) => {\n//clear errors on resubmission\n    setErrorMsg(null);\n    event.preventDefault();\n    const data = new FormData(event.currentTarget);\n    // eslint-disable-next-line no-console\n   \n    const submissionInfo = {email:data.get('email'), password:data.get('password'), firstname:data.get('firstName'), lastname:data.get('lastName')};\n\n     dispatch(register(submissionInfo));          \n          \n  };\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container  sx={{backgroundColor: bgColor}} component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <Box  sx={{\n            marginTop: 8,\n            display: 'flex',\n\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n            <LockOutlinedIcon />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            Sign up\n          </Typography>\n           <Typography component=\"span\"  align=\"center\" sx={{color:'red'}}>\n       {error}{stateError}\n          </Typography>\n          <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  autoComplete=\"given-name\"\n                  name=\"firstName\"\n                  required\n                  fullWidth\n                  id=\"firstName\"\n                  label=\"First Name\"\n                  autoFocus\n                  inputProps={FirstNameAriaLabel}\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"lastName\"\n                  label=\"Last Name\"\n                  inputProps={LastNameAriaLabel}\n\n                  name=\"lastName\"\n                  autoComplete=\"family-name\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  id=\"email\"\n                  inputProps={EmailAriaLabel}\n                  label=\"Email Address\"\n                  name=\"email\"\n                  autoComplete=\"email\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  fullWidth\n                  name=\"password\"\n                  label=\"Password\"\n                  inputProps={PasswordAriaLabel}\n                  type=\"password\"\n                  id=\"password\"\n                  autoComplete=\"new-password\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <FormControlLabel\n                  control={<Checkbox value=\"allowExtraEmails\" color=\"primary\" />}\n                  label=\"I want to receive inspiration, marketing promotions and updates via email.\"\n                />\n              </Grid>\n            </Grid>\n            <Button\n              type=\"submit\"\n              aria-label=\"Submit\"\n              fullWidth\n              variant=\"contained\"\n              sx={{ mt: 3, mb: 2 }}\n            >\n              Sign Up\n            </Button>\n            <Grid container justifyContent=\"flex-end\">\n              <Grid item>\n                <Button aria-label='signInLink' onClick={()=>navigate('/signin')} href=\"#\" variant=\"body2\">\n                  Already have an account? Sign in\n                </Button>\n              </Grid>\n            </Grid>\n          </Box>\n        </Box>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default SignUp;","import  React , {useState} from 'react';\nimport { useSelector } from 'react-redux'\n\nimport Card from '@mui/material/Card';\nimport Button from '@mui/material/Button';\nimport AirportShuttleIcon from '@mui/icons-material/AirportShuttle';\nimport Input from '@mui/material/Input';\nimport FullScreenAgendaDialog from '../calendars/fullScreenAgendaDialog.js'\nimport  Divider  from '@mui/material/Divider';\nimport  Box  from '@mui/material/Box';\nimport ContactCard from './ContactCard';\nimport CardMedia from '@mui/material/CardMedia';\nimport CardContent from '@mui/material/CardContent';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardActions from '@mui/material/CardActions';\n\nimport CssBaseline from '@mui/material/CssBaseline';\nimport Grid from '@mui/material/Grid';\nimport StarIcon from '@mui/icons-material/StarBorder';\nimport Typography from '@mui/material/Typography';\nimport GlobalStyles from '@mui/material/GlobalStyles';\nimport Container from '@mui/material/Container';\n//import {Link as ReactLink} from \"react-router-dom\";\nimport { useNavigate} from \"react-router-dom\";\n\nimport AdminDrawerMenu from './AdminMenu';\nimport {  isAdminSelector} from '../constants';\n\nimport { useTheme } from '@mui/material/styles';\nimport useMediaQuery from '@mui/material/useMediaQuery';\n\n//const selectCardsData = state => state?.siteData?.cardData;\n\n/**\n * @description  InfoCards, is a an editable fragment of the  home page.  If User is Admin then \n *      a special \"admin\" menu is available allowing the user to change text\n */\nfunction AppointmentHome({bgColor}) {\n  const theme = useTheme();\n  const matches = useMediaQuery('(min-width:600px)');\n  const navigate = useNavigate();\n  const [getCardData] = useState([{title:'View Availability Calendar', imageURL:'https://jaxonetic-github.github.io/React-Appointment-Setter/astroclock.jpeg'},{title:'Book Appointment',imageURL:'openCalendar.jpeg'}])\n  const url = 'https://jaxonetic-github.github.io/React-Appointment-Setter/coveredInFlowers.jpeg';\n\n\n  return (\n    <React.Fragment>\n\n<Container sx={{margin: 0, padding: 0, }}>\n    <Grid container spacing={2} sx={{alignItems: 'center'}} >\n  <Grid item={true} xs={12} md={5}  >\n     <Card  sx={{ margin: 'auto' ,maxWidth:600}}><CardMedia component=\"img\" alt=\"banner\" image={url} /></Card>\n  </Grid>\n  <Grid  item={true}  xs={12} md={6} sx={{alignItems: 'center'}}>\n  <Card sx={{ margin: 'auto',maxWidth:600}}><CardHeader title={'Massage & Reiki Therapy'}  titleTypographyProps={{ align: 'center' }}     >Massage Therapy</CardHeader>\n  <CardContent> Massage, cupping and reiki</CardContent>\n  <CardContent>Welcome to your portal for private alternative care.  I specialize in working\n  with athletes and healthcare workers or those who have higly stressful professions.</CardContent>\n  </Card>\n  </Grid>\n</Grid>\n\n <Card ><CardHeader title={'Pricing'}  titleTypographyProps={{ align: 'center' }}></CardHeader>\n  <CardContent sx={{maxWidth:'80'}}> \n     <Grid container spacing={0} >\n  <Grid item={true} xs={8} md={4}  sx={{ margin: 'auto'}}>\n    <Box>\n      <dl><h3>In Studio<sup>+$30 travel expense</sup></h3>\n      <dt><u>Therapeutic Massages </u></dt><dd>: $80/70min or $140/120min (+1 addons)</dd>\n      <dt>Bulk deal</dt><dd>: 5 * 70min massages for $400</dd>\n      <dt><u>Add-Ons</u> </dt><dd></dd>\n      <dt>Cupping </dt> <dd>: $10 for 20min</dd>\n      <dt>Reflexology </dt> <dd>: $10 for 10min</dd>\n      </dl>\n    </Box>\n  </Grid>\n  <Grid  item={true}  xs={8} md={4} sx={{ margin: 'auto'}}>\n    <Box > \n      <dl><h3>Rituals & Meditations</h3>\n      <dt>Guided Meditations</dt><dd>: $90/70min or $140/120min </dd>\n      <dt>Elemental Meditations (ex. Tattwa Shudhi) </dt><dd>: $40 for 30min</dd>\n      <dt>Rituals </dt> <dd>: $500 </dd>\n      </dl>\n    </Box>\n    </Grid>\n\n</Grid>\n   </CardContent >\n  </Card>\n   <Box sx={{ margin:'auto', justifyContent: 'space-around' ,  py:8, maxWidth:350}}>\n     <Button variant='outlined'  size=\"small\" onClick={()=>navigate('/availabilityCalendar')}  sx={{ mt: 2 , color:'605757'}}>{'View Availability'} </Button>\n     <Button variant='outlined'  size=\"small\" onClick={()=>navigate('/checkout')}  sx={{ mt: 2 , color:'605757'}}>{'Book Appointment'} </Button>\n    </Box>\n\n</Container>\n    <ContactCard/>\n    </React.Fragment>\n  );\n}\n\n\nexport default AppointmentHome;\n","import React from \"react\";\nimport MainComponent from \"./home/MainComponent.js\";\nimport {HashRouter as Router, Routes, Route} from 'react-router-dom';\nimport GeneralInfo from './home/GeneralInfo';\nimport Reservations from './checkout/Reservations';\nimport Checkout from './checkout/Checkout';\nimport Profile from './profile/Profile';\nimport SignIn from './signinup/Signin';\nimport SignUp from './signinup/Signup';\nimport AppointmentHome from './home/appointmentHome.js';\nimport {HOME_BANNER_URL, COMPANY_NAME} from './constants.js'\n//import { useIdleTimer } from 'react-idle-timer';\nimport FullScreenAgendaDialog from './calendars/fullScreenAgendaDialog.js'\n\n\n/*const loginAnonymous = async () => {\n    const user = await app.logIn(Realm.Credentials.anonymous());\n    console.log(user);\n  };*/\n\n\n/**\n *  the Main Component containing the app routes          \n *      <Route path=\"*\" element={<GeneralInfo />} />\n */\nfunction App() {\nconsole.log(process.env.REACT_APP_WEBPATH,',',process.env.PUBLIC_URL)\n  const bgColor = 'transparent';// 'cadetblue';\n  return (\n    <Router>\n    <Routes >\n          <Route path='/'  element={<MainComponent companyTitle={COMPANY_NAME} bannerURL={HOME_BANNER_URL} />} >\n             <Route  index   element={<AppointmentHome  bgColor={bgColor}/>} />\n             <Route path={\"/profile\"} element={<Profile bgColor={bgColor} />} />\n             <Route  path={'signin'} element={<SignIn bgColor={bgColor} />} />\n             <Route  path={\"availabilityCalendar\"} element={<FullScreenAgendaDialog  bgColor={bgColor} displayAs={'full'} />} />\n             <Route  path={\"signup\"} element={<SignUp bgColor={bgColor} />} />\n             <Route  path={\"checkout\"} element={<Checkout bgColor={bgColor}/>} />\n             <Route path={\"reservations\"} element={<Reservations bgColor={bgColor} />} />\n         </Route>\n       </Routes></Router>\n  );\n\n}\n\n\n\nexport default App;","import * as Realm from \"realm-web\";\nimport { handleAuthenticationError, parseAuthenticationError, APP_NOTIFICATIONS} from './constants';\n    import emailjs, { init } from 'emailjs-com';\n\n/**\n * @class\n * @description Using the Provider and the React.Context to store teh DB link.\n * \n * @param demoAppId : The Realm Aplication ID\n * @param children : the nodes nested within component\n */\nexport class RealmDAO  {\n\n  constructor( demoAppId){\nthis.app = new Realm.App(demoAppId);\n  \n  }\n\n/**\n * @desc ensure customData object is not stale\n * \n * @returns profile info as object\n *\n*/\n refreshCustomData = async ()=>{\n await this.app?.currentUser?.refreshCustomData(); \n return this.app?.currentUser?.customData;\n}\n   \n\n/**\n * @desc Add an item to schedule\n * \n * @returns profile info as object\n *\n*/\n addScheduledItem = async (item)=>{\n    try\n    {\n const result = await this.app?.currentUser?.functions.addScheduledItem(item); \nconsole.log(result);\nreturn result;\n\n}catch(error){\n    return{error}\n}\n}\n\n/**\n * @desc ensure customData object is not stale\n * \n * @returns profile info as object\n *\n*/\n getScheduleItems = async ()=>{\n\n const results =  await this.app?.currentUser?.functions.getScheduleItems({}); \n console.log('results', results);\n return results;\n\n\n}\n/**\n * @desc ensure customData object is not stale\n * \n * @returns profile info as object\n *\n*/\n removeScheduledItems = async ()=>{\n return await this.app?.currentUser?.functions.DeleteFromAvailabilityCalendar(); \n}\n\n  /**\n   *  login with the provided Login Credentials.  After loggin in , set Profile and Reservations\n   */\n  loginAnonymously = async  ()=> {\n      const loginResult = await this.app?.logIn(Realm.Credentials.anonymous());\n      console.log(\"loginAnonymously:\",loginResult);\n     // await this.getSiteData();\n\n      //this.logOut();\n      return loginResult;\n}\n\n  /**\n   *  login with the provided Login Credentials.  After loggin in , set Profile and Reservations\n   */\n  login =async  (credentials) =>{\nconsole.log(credentials)\n    try\n    {\n    //tell store that a login is being attempted\n   //dispatch(login('Attempting to login'));\n   const loginResult =  await this.app.logIn(Realm.Credentials.emailPassword(credentials.email, credentials.password));\n   return loginResult;\n    } catch(err)\n    {\n      const msg = handleAuthenticationError(err);\n      console.log(msg,'--',err);\n     //  dispatch(loginError(msg));\n    }\n  }\n \n\n/**\n *  Logout current user, by clearing the CurrentUSer, Profile, and Reservations\n */\n  logOut = async ()=> {\n    // Log out the currently active user\n    this.app?.currentUser?.logOut();\n  }\n\n\n/**\n * Register user by autoconfirmaed email, \n * @params email, password needed for registration\n * @params firstName, lastName : needed for profile\n * @params phone: optional\n * \n */\n  registerWithEmail =async  (registerData)=> {\n    try{\n     // const args = {email,password,firstName, lastName, phone};\n     //  dispatch(register(args));\n\n\n     await this.app.emailPasswordAuth.registerUser(registerData.email, registerData.password);\n      await this.app?.logIn(Realm.Credentials.emailPassword(registerData.email, registerData.password));\n    //      dispatch(refreshCustomDataSuccess());\n    try {\n         //add CustomData\n         await this.app?.currentUser?.functions?.AddUserData({...registerData, userid:this.app?.currentUser?.id});\n    \n          return  this.refreshCustomData();\n\n    }catch(err1){console.log(\"errer adding userdata\",err1)}\n       // const prof = await newUser.functions.GetUserData(newUser.id);\n    \n\n    //dispatch(registerSuccess({user:newUser, profile:app?.currentUser?.customData, reservations:reservations}))\n/*\ntry {\n      await getReservations();\n}catch(err2){console.log('error gettinng reservation',err2)}\n*/\n     return {success:true};\n}catch(error){\n  console.log(error);\n   //   dispatch({type: 'REGISTER_FAILED', payload:{error:handleAuthenticationError(error)} });\n\n  return {error:handleAuthenticationError(error)};\n}\n\n  }\n\n\n/**\n * Return Profile of registered user.\n * \n */\n getProfile = async ()=> {\n    \n     let prof = null;\n     try{\n     prof = await this.app?.currentUser?.functions?.GetUserData(this.app?.currentUser?.id);\n    }catch(error){\n       const { status, message } = parseAuthenticationError(error);\n       return {error:status+message};\n    }\nreturn prof;\n}\n\n/**\n * Edit Profile of registered user.\n * \n * @param profileObj: \n * \n */\n editProfile = async (profileObj)=> {\n  \n     let prof = null;\n     try{\n     prof = await this.app?.currentUser?.functions?.EditProfile(profileObj);\n    }catch(error){\n      console.log(error);\n       return {error:error.message};\n    }\nreturn prof;\n}\n\n\n\n/**\n * Read Site Data: If user object has the *?.functions* variable available\n *   then retrieve the Site Data, otherwise anonymously login first for access \n *   to backend functions.\n *  @return {object} site -  {pageData:HOME_PAGE_DEFAULT, cardData:TIERS};\n */\n  getSiteData = async ()=> {\n \n   //  let site =  {pageData:HOME_PAGE_DEFAULT, cardData:TIERS};\n    try{\n       const site =   await this.app.currentUser.functions.GetSiteData();\n      console.log('returning,',site);\n      return site;\n    }catch(error){\n     const {  message } = parseAuthenticationError(error);\n\n           return {error:message};\n    }\n}\n\n\n/**\n * Edits data  for the Home Page by a registered Admin user.  \n * @param newPageData takes a HOME_PAGE_DEFAULT type object\n */\n editHomeData = async (newPageData) =>{\n  \ntry{\nif (newPageData){\nconst obj ={screen:'home_general',pageData:newPageData.pageData, cardData:newPageData.cardData}\nconsole.log(newPageData,'passing to edithomefuncion',obj);\n\n     const editResults = await this.app?.currentUser?.functions.EditHomeData(newPageData);\nconsole.log('editResults from realm', editResults);\nthis.setSiteData({screen:'home_general',pageData:newPageData.pageData, contactData:newPageData.contactData, cardData:newPageData.cardData});\n\n}else\n{\n  console.log('reseting dome data')\n  const resetResults = await this.app?.currentUser?.functions?.EditHomeData();\n  console.log(resetResults);\n  const newdata = await this.getSiteData();\n  console.log('new site returned from db=',newdata);\n\n}\n}catch(error){\n  console.log(\"EditHomeData Error\",error);\n  const {  message } = parseAuthenticationError(error);\n       console.log(message);\n       return {error:message};\n}\n \n\n}\n\n\n\n/**\n *  Allows a registered user to add a new reservation\n * @param {reservation}\n */\n insertReservations = async  (reservation)=> {\n\n    const newReservation = {...reservation, dateAdded :(new Date()), userid:this.app.currentUser?.id };\n   const result = await this.app.currentUser?.functions.InsertReservation(newReservation);\nconsole.log(process.env.REACT_APP_BLOCK_NOTIFY_ON_RESERVE,' , ',process.env.REACT_APP_SERVICEID );\n//allow env variable to prevent email/text notifications\nif(APP_NOTIFICATIONS){\n    init(process.env.REACT_APP_EMAILJS_USERID);\n    const message = `Reservation requested from (${newReservation.firstName} ${newReservation.lastName}). Contact Info:${newReservation.phone}, ${newReservation.email}`;\n     const emailTemplate  = \n     {to_name:'Alora', from_name:'Alchemeia Notifier',\n      message:message};\n\n\n    const emailResult = await emailjs.send(process.env.REACT_APP_SERVICEID, process.env.REACT_APP_EMAILJS_TEMPLATEID, emailTemplate, process.env.REACT_APP_EMAILJS_USERID).then((result)=>console.log('Notification Success', result),(error)=>console.log('Notification Error', error));\n    }\n return result;\n}\n\n\n/**\n *  Return all Reservations by query, for loggedIn and connected users\n *  @return JSON.parse(reservation_array)\n */\ngetReservations = async  ()=>{\n  try\n  {\n  const res = await this.app.currentUser?.functions?.FindReservation();\n  if(!res) return [];\n\n  return (JSON.parse(res));\n}catch(err){\nreturn {error:err};\n}\n}\n\n\n//the variables wrapped and available to the components within this Providor\n // const wrapped = { ...app,siteData,editHomeData, currentUser,registerWithEmail,insertReservations, reservations,profile,getReservations, getProfile, logIn, logOut };\n\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  put,call, takeEvery, select } from 'redux-saga/effects'\n\n\nimport {logout,loginError, login,loginSucceeded, register,\nfetchSiteDataSuccess,fetchSiteData,fetchSiteDataError,loginAnonymously,\n refreshCustomData,fetchReservations,fetchReservationsError,fetchReservationsSuccess,\n  loadProfile,insertReservation,editProfile,editProfileSuccess,editProfileError,\naddScheduledItem,addScheduledItemSuccess,addScheduledItemError,fetchScheduledItems,fetchScheduledItemsSuccess,fetchScheduledItemsError,} from './reducers/appReducer';\n// worker Saga: will be fired on USER_FETCH_REQUESTED actions\n\n\n\n/**\n * @description Register user\n * @param {object} action - action.payload.credentials={email, password, firstName, lastName, phone}\n * \n */\nfunction* registerSaga(action) {\n  const app = yield select(state=>state.app);\n  const customData = yield call(app.registerWithEmail,action.payload );    \n  console.log('registersaga:', customData);\n\n  yield put(loadProfile( customData));\n}\n\n\n/**\n *  logout Saga:\n */\nfunction* signOutSaga(action) {\n    const app = yield select(state=>state.app);\n    call(app.logOut ); \n}\n\n/**\n *  getReservation Saga: will be fired on getReservation actions\n *\n */\n\nfunction* getReservationsSaga(action) {\n\n       const app = yield select(state=>state.app);\nconsole.log('state.app in getreservationssaga:', app);\n   try {\n      const reservationsResult = yield call(app.getReservations );\n    yield put(fetchReservationsSuccess(reservationsResult) );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put(fetchReservationsError( e.message));\n   }\n}\n\n/**\n * worker Saga: will be fired on USER_FETCH_REQUESTED actions\n *\n */\n\nfunction* insertReservationSaga(action) {\n\n       const app = yield select(state=>state.app);\n\n   try {\n       yield call(app.insertReservations,action.payload );\n    yield put(fetchReservations() );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n      yield put(fetchReservationsError( e.message));\n   }\n}\n\n\n/**\n *  worker Saga: to be fired when unauthed user needs SiteData\n *\n */\nfunction* loginAnonymouslySaga(action) {\n     const app = yield select(state=>state.app);\n\n\n  const loginResult = yield call(app.loginAnonymously );\nconsole.log('anonymouse result in saga',loginResult);\n     \n const site = yield call(app.getSiteData);\nif(site.screen) {\n  yield put(fetchSiteDataSuccess(site))\n yield put(fetchScheduledItems())\n}\n yield call(app.logOut);\n\n}\n\n/**\n * @description Attempt to Log in. If successful,fetch reservations, profile \n * \n */\nfunction* loginSaga(action) {\n   const app = yield select(state=>state.app);\n\nconst email = action.payload.email;\nconst password = action.payload.password;\nconst loginResult = yield call(app.login,{email,password} );\n\n  if( loginResult)\n  { \n    yield put(loginSucceeded(loginResult));\n   yield put(fetchReservations());\n    yield put(refreshCustomData());\n     yield put(fetchScheduledItems())\n\n  }\n  else \n   put(loginError(loginResult.error));\n\n}\n\n\n/**\n * @description Attempt to Log in. If successful,fetch reservations, profile \n * @param {object }action - action.payload={first, last, email, phone}\n */\nfunction* editProfileSaga(action) {\n    console.log('editProfileSaga', action);\n   const app = yield select(state=>state.app);\n\nconst email = action.payload.email;\nconst lastname = action.payload.lastname;\nconst firstname = action.payload.firstname;\nconst phone = action.payload.phone;\nconsole.log('---------->',email, lastname, firstname, phone);\nconst {modifiedCount, profile} = yield call(app.editProfile,action.payload );\n\n  if( modifiedCount>0)\n  { \n    yield put(editProfileSuccess(profile));\n    yield put(refreshCustomData());\n  }\n  else \n   put(editProfileError('Profile was not modified'));\n\n}\n\n\n\n\n/**\n * @description ensure the customData object is uptoData \n * \n */\nfunction* customDataRefreshSaga(action) {\n  const app = yield select(state=>state.app);\n  console.log('state',app);\n  const customData = yield call(app.refreshCustomData );\n      \n  yield put(loadProfile( customData));\n}\n\n\n/**\n  Starts fetchUser on each dispatched `USER_FETCH_REQUESTED` action.\n  Allows concurrent fetches of user.\n\nfunction* UnhandledSaga(action) {\n  console.log('UnhandledSaga',action);\n}\n*/\n\n\n/**\n *  worker Saga: will be fired on USER_FETCH_REQUESTED actions\n */ \nfunction* fetchSiteDataSaga(action) {\n     const app = yield select(state=>state.app);\n\n   try {\n       const siteData =   yield call(app.getSiteData);\nconsole.log('siteData retrieved', siteData)\n    yield put( fetchSiteDataSuccess(siteData) );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n    console.log(e);\n      yield put(fetchSiteDataError( e.message));\n   }\n }\n\n/**\n * @description ensure the customData object is uptoData \n * \n */\nfunction* addScheduledItemSaga(action) {\n  const app = yield select(state=>state.app);\n  const newItemResult = yield call(app.addScheduledItem, action.payload );\n  console.log('new item result',newItemResult.insertedId)\n  yield put(addScheduledItemSuccess(action.payload))\n  // yield put(fetchScheduledItems())\n\n  //yield put(loadProfile( customData));\n}\n\n/**\n *  worker Saga: will be fired on FETCH_AVAILABILITY actions\n */ \nfunction* fetchScheduleItemsSaga(action) {\n     const app = yield select(state=>state.app);\n\n   try {\n       const scheduledItems =   yield call(app.getScheduleItems);\nconsole.log('ScheduleItem retrieved', scheduledItems)\n    yield put( fetchScheduledItemsSuccess(scheduledItems) );\n    //  const user = yield call(Api.fetchUser, action.payload.userId);\n      //yield put({type: \"USER_FETCH_SUCCEEDED\", user: user});\n   } catch (e) {\n    console.log(e);\n      yield put(fetchScheduledItemsError( e.message));\n   }\n }\n\n\n/**\n\n  Does not allow concurrent fetches of user. If \"USER_FETCH_REQUESTED\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* appSaga(app) {\n  yield takeEvery(loginAnonymously, loginAnonymouslySaga);\n   yield takeEvery(addScheduledItem, addScheduledItemSaga);\n   yield takeEvery(fetchScheduledItems, fetchScheduleItemsSaga);\n  yield takeEvery(editProfile, editProfileSaga);\n  yield takeEvery(login, loginSaga);\n  yield takeEvery(logout, signOutSaga);\n  yield takeEvery(refreshCustomData,customDataRefreshSaga);\n  yield takeEvery(insertReservation,insertReservationSaga);\n  yield takeEvery(register,registerSaga);\n  yield takeEvery(fetchReservations,getReservationsSaga);\nyield takeEvery(fetchSiteData,fetchSiteDataSaga);\n}\n\nexport default appSaga;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport './css/App.css';\n\nimport App from './App';\nimport { RealmDAO } from \"./RealmDAO.js\";\nimport { INITIAL_STATE,INITIAL_STATE_EMPTY } from \"./constants.js\";\nimport reportWebVitals from './reportWebVitals';\n//import RealmApolloProvider from \"./graphql/RealmApolloProvider\";\n\nimport { createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\nimport { Provider } from 'react-redux'\n\nimport {appReducer,fetchScheduledItems,refreshCustomData,fetchReservations,loginAnonymously,loadBackEnd,fetchSiteData} from './redux/reducers/appReducer'\nimport saga from './redux/sagas';\nimport {logger} from 'redux-logger';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\n// create the saga middleware\nconst sagaMiddleware = createSagaMiddleware()\n\nconst mock  = false\nconst initialState=mock?INITIAL_STATE : INITIAL_STATE_EMPTY;\n\n// mount it on the Store\n   const store = createStore(appReducer, initialState,  applyMiddleware(sagaMiddleware, logger))\n   \n   // start the saga\n   sagaMiddleware.run(saga);\n\n   const app =  new RealmDAO(process.env.REACT_APP_MONGODB_REALM_APPID); // mock ? INITIAL_STATE.app;\n  \n   store.dispatch(loadBackEnd(app));\n\n   if(!app.app.currentUser){\n    //logging in anonymously to load changeable data\n      store.dispatch(loginAnonymously());\n   \n  }\n   else{\n    //ensure non-stale customData object\n    store.dispatch(refreshCustomData());\n    //load changeable data\n    store.dispatch(fetchSiteData());\n    //load user reservations, if any\n    store.dispatch(fetchReservations());\n        store.dispatch(fetchScheduledItems());\n   }\n\n  /*\n          const credentials = {\n          email: 'jaxonetic@gmail.com',\n          password: '123456789',\n        }\n    app.logIn(Realm.Credentials.emailPassword(credentials.email, credentials.password));\n  //  store.dispatch(refreshCustomData());\n            \n    sagaMiddleware.run(mySaga, app);\n    console.log('placibo app::',app);\n\n    if(!app.currentUser)\n    {\nconsole.log('no app cuser',app);\n\n    }\n    else{//there is aleadry a user \n        console.log(app);\n\n        }*/\n        /*\n        try {\n        store.dispatch(loadBackEnd(app));\n        if(!app?.currentUser)\n        {\n          const user = app.login(Realm.Credentials.anonymous());\n          store.dispatch()\n        }\n        store.dispatch(fetchSiteData());\n       // console.log(store.getState());\n    \n   \n// load our back end access\n//console.log(app.login);\n\n\n}catch(err){\n  console.log('Unable to load Back End', err);\n}\n*/\n  \nconsole.log(store.getState());\n// render the application\nconst theme = createTheme();\n\nReactDOM.render(\n  <React.StrictMode>\n  <Provider store={store}>\n      <ThemeProvider theme={theme}>\n\n        <App />\n    </ThemeProvider >\n\n  </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}